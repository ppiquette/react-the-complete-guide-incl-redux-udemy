{"version":3,"sources":["../node_modules/babel-traverse/lib/path/evaluation.js"],"names":["exports","_typeof2","require","_typeof3","_interopRequireDefault","_getIterator2","_getIterator3","_map","_map2","obj","default","VALID_CALLEES","INVALID_METHODS","res","confident","deoptPath","seen","value","evaluate","deopt","node","path","existing","item","resolved","val","_evaluate","exprs","str","i","_exprs","_iterator","_isArray","Array","_i","_ref","elem","expr","String","testResult","callee","property","object","_value","type","binding","prefix","argument","arg","arr","elems","_iterator2","_isArray2","_i2","_ref2","_elem","props","_iterator3","_isArray3","_i3","_ref3","prop","keyPath","key","valuePath","_value2","wasConfident","left","leftConfident","right","rightConfident","_left","_right","Math","context","func","global","_object","_property","_type","args"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAtB,8BAAsB,CAAtB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAArC,QAAqC,CAArC;;AAEA,IAAIC,aAAa,GAAGH,OAAO,CAA3B,oCAA2B,CAA3B;;AAEA,IAAII,aAAa,GAAGF,sBAAsB,CAA1C,aAA0C,CAA1C;;AAEA,IAAIG,IAAI,GAAGL,OAAO,CAAlB,2BAAkB,CAAlB;;AAEA,IAAIM,KAAK,GAAGJ,sBAAsB,CAAlC,IAAkC,CAAlC;;AAEAJ,OAAO,CAAPA,cAAAA,GAAAA,cAAAA;AACAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;AAAE,SAAOS,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;AAAEC,IAAAA,OAAO,EAAED;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,aAAa,GAAG,CAAA,QAAA,EAAA,QAAA,EAApB,MAAoB,CAApB;AACA,IAAIC,eAAe,GAAG,CAAtB,QAAsB,CAAtB;;AAEA,SAAA,cAAA,GAA0B;AACxB,MAAIC,GAAG,GAAG,KAAV,QAAU,EAAV;AACA,MAAIA,GAAG,CAAP,SAAA,EAAmB,OAAO,CAAC,CAACA,GAAG,CAAZ,KAAA;AACpB;;AAED,SAAA,QAAA,GAAoB;AAClB,MAAIC,SAAS,GAAb,IAAA;AACA,MAAIC,SAAS,GAAG,KAAhB,CAAA;AACA,MAAIC,IAAI,GAAG,IAAIR,KAAK,CAApB,OAAW,EAAX;;AAEA,WAAA,KAAA,CAAA,IAAA,EAAqB;AACnB,QAAI,CAAJ,SAAA,EAAgB;AAChBO,IAAAA,SAAS,GAATA,IAAAA;AACAD,IAAAA,SAAS,GAATA,KAAAA;AACD;;AAED,MAAIG,KAAK,GAAGC,QAAQ,CAApB,IAAoB,CAApB;AACA,MAAI,CAAJ,SAAA,EAAgBD,KAAK,GAALA,SAAAA;AAChB,SAAO;AACLH,IAAAA,SAAS,EADJ,SAAA;AAELK,IAAAA,KAAK,EAFA,SAAA;AAGLF,IAAAA,KAAK,EAAEA;AAHF,GAAP;;AAMA,WAAA,QAAA,CAAA,IAAA,EAAwB;AACtB,QAAIG,IAAI,GAAGC,IAAI,CAAf,IAAA;;AAGA,QAAIL,IAAI,CAAJA,GAAAA,CAAJ,IAAIA,CAAJ,EAAoB;AAClB,UAAIM,QAAQ,GAAGN,IAAI,CAAJA,GAAAA,CAAf,IAAeA,CAAf;;AACA,UAAIM,QAAQ,CAAZ,QAAA,EAAuB;AACrB,eAAOA,QAAQ,CAAf,KAAA;AADF,OAAA,MAEO;AACLH,QAAAA,KAAK,CAALA,IAAK,CAALA;AACA;AACD;AAPH,KAAA,MAQO;AACL,UAAII,IAAI,GAAG;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AACAR,MAAAA,IAAI,CAAJA,GAAAA,CAAAA,IAAAA,EAAAA,IAAAA;;AAEA,UAAIS,GAAG,GAAGC,SAAS,CAAnB,IAAmB,CAAnB;;AACA,UAAA,SAAA,EAAe;AACbH,QAAAA,IAAI,CAAJA,QAAAA,GAAAA,IAAAA;AACAA,QAAAA,IAAI,CAAJA,KAAAA,GAAAA,GAAAA;AACD;;AACD,aAAA,GAAA;AACD;AACF;;AAED,WAAA,SAAA,CAAA,IAAA,EAAyB;AACvB,QAAI,CAAJ,SAAA,EAAgB;AAEhB,QAAIH,IAAI,GAAGC,IAAI,CAAf,IAAA;;AAGA,QAAIA,IAAI,CAAR,oBAAIA,EAAJ,EAAiC;AAC/B,UAAIM,KAAK,GAAGN,IAAI,CAAJA,GAAAA,CAAZ,aAAYA,CAAZ;AACA,aAAOH,QAAQ,CAACS,KAAK,CAACA,KAAK,CAALA,MAAAA,GAAtB,CAAqB,CAAN,CAAf;AACD;;AAED,QAAIN,IAAI,CAAJA,eAAAA,MAA0BA,IAAI,CAA9BA,gBAA0BA,EAA1BA,IAAqDA,IAAI,CAA7D,gBAAyDA,EAAzD,EAAkF;AAChF,aAAOD,IAAI,CAAX,KAAA;AACD;;AAED,QAAIC,IAAI,CAAR,aAAIA,EAAJ,EAA0B;AACxB,aAAA,IAAA;AACD;;AAED,QAAIA,IAAI,CAAR,iBAAIA,EAAJ,EAA8B;AAC5B,UAAIO,GAAG,GAAP,EAAA;AAEA,UAAIC,CAAC,GAAL,CAAA;;AACA,UAAIC,MAAM,GAAGT,IAAI,CAAJA,GAAAA,CAAb,aAAaA,CAAb;;AAEA,WAAK,IAAIU,SAAS,GAAGX,IAAI,CAApB,MAAA,EAA6BY,QAAQ,GAAGC,KAAK,CAALA,OAAAA,CAAxC,SAAwCA,CAAxC,EAAkEC,EAAE,GAApE,CAAA,EAA0EH,SAAS,GAAGC,QAAQ,GAAA,SAAA,GAAe,CAAC,GAAG1B,aAAa,CAAjB,OAAA,EAAlH,SAAkH,CAAlH,IAA2J;AACzJ,YAAA,IAAA;;AAEA,YAAA,QAAA,EAAc;AACZ,cAAI4B,EAAE,IAAIH,SAAS,CAAnB,MAAA,EAA4B;AAC5BI,UAAAA,IAAI,GAAGJ,SAAS,CAACG,EAAjBC,EAAgB,CAAhBA;AAFF,SAAA,MAGO;AACLD,UAAAA,EAAE,GAAGH,SAAS,CAAdG,IAAKH,EAALG;AACA,cAAIA,EAAE,CAAN,IAAA,EAAa;AACbC,UAAAA,IAAI,GAAGD,EAAE,CAATC,KAAAA;AACD;;AAED,YAAIC,IAAI,GAAR,IAAA;AAEA,YAAI,CAAJ,SAAA,EAAgB;AAEhBR,QAAAA,GAAG,IAAIQ,IAAI,CAAJA,KAAAA,CAAPR,MAAAA;AAEA,YAAIS,IAAI,GAAGP,MAAM,CAACD,CAAlB,EAAiB,CAAjB;AACA,YAAA,IAAA,EAAUD,GAAG,IAAIU,MAAM,CAACpB,QAAQ,CAAtBU,IAAsB,CAAT,CAAbA;AACX;;AAED,UAAI,CAAJ,SAAA,EAAgB;AAChB,aAAA,GAAA;AACD;;AAED,QAAIP,IAAI,CAAR,uBAAIA,EAAJ,EAAoC;AAClC,UAAIkB,UAAU,GAAGrB,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAA1B,MAA0BA,CAAD,CAAzB;AACA,UAAI,CAAJ,SAAA,EAAgB;;AAChB,UAAA,UAAA,EAAgB;AACd,eAAOH,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAAhB,YAAgBA,CAAD,CAAf;AADF,OAAA,MAEO;AACL,eAAOH,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAAhB,WAAgBA,CAAD,CAAf;AACD;AACF;;AAED,QAAIA,IAAI,CAAR,mBAAIA,EAAJ,EAAgC;AAC9B,aAAOH,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAAhB,YAAgBA,CAAD,CAAf;AACD;;AAED,QAAIA,IAAI,CAAJA,kBAAAA,MAA6B,CAAC,IAAI,CAAJ,UAAA,CAAA,gBAAA,CAAiC;AAAEmB,MAAAA,MAAM,EAAEpB;AAAV,KAAjC,CAAlC,EAAsF;AACpF,UAAIqB,QAAQ,GAAGpB,IAAI,CAAJA,GAAAA,CAAf,UAAeA,CAAf;AACA,UAAIqB,MAAM,GAAGrB,IAAI,CAAJA,GAAAA,CAAb,QAAaA,CAAb;;AAEA,UAAIqB,MAAM,CAANA,SAAAA,MAAsBD,QAAQ,CAAlC,YAA0BA,EAA1B,EAAmD;AACjD,YAAIE,MAAM,GAAGD,MAAM,CAANA,IAAAA,CAAb,KAAA;AACA,YAAIE,IAAI,GAAG,OAAA,MAAA,KAAA,WAAA,GAAA,WAAA,GAA8C,CAAC,GAAGzC,QAAQ,CAAZ,OAAA,EAAzD,MAAyD,CAAzD;;AACA,YAAIyC,IAAI,KAAJA,QAAAA,IAAqBA,IAAI,KAA7B,QAAA,EAA4C;AAC1C,iBAAOD,MAAM,CAACF,QAAQ,CAARA,IAAAA,CAAd,IAAa,CAAb;AACD;AACF;AACF;;AAED,QAAIpB,IAAI,CAAR,sBAAIA,EAAJ,EAAmC;AACjC,UAAIwB,OAAO,GAAGxB,IAAI,CAAJA,KAAAA,CAAAA,UAAAA,CAAsBD,IAAI,CAAxC,IAAcC,CAAd;;AAEA,UAAIwB,OAAO,IAAIA,OAAO,CAAPA,kBAAAA,CAAAA,MAAAA,GAAf,CAAA,EAAsD;AACpD,eAAO1B,KAAK,CAAC0B,OAAO,CAApB,IAAY,CAAZ;AACD;;AAED,UAAIA,OAAO,IAAIxB,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,GAAkBwB,OAAO,CAAPA,IAAAA,CAAAA,IAAAA,CAAjC,GAAA,EAAwD;AACtD,eAAO1B,KAAK,CAAC0B,OAAO,CAApB,IAAY,CAAZ;AACD;;AAED,UAAIA,OAAO,IAAIA,OAAO,CAAtB,QAAA,EAAiC;AAC/B,eAAOA,OAAO,CAAd,KAAA;AADF,OAAA,MAEO;AACL,YAAIzB,IAAI,CAAJA,IAAAA,KAAJ,WAAA,EAA+B;AAC7B,iBAAOyB,OAAO,GAAG1B,KAAK,CAAC0B,OAAO,CAAhB,IAAQ,CAAR,GAAd,SAAA;AADF,SAAA,MAEO,IAAIzB,IAAI,CAAJA,IAAAA,KAAJ,UAAA,EAA8B;AACnC,iBAAOyB,OAAO,GAAG1B,KAAK,CAAC0B,OAAO,CAAhB,IAAQ,CAAR,GAAd,QAAA;AADK,SAAA,MAEA,IAAIzB,IAAI,CAAJA,IAAAA,KAAJ,KAAA,EAAyB;AAC9B,iBAAOyB,OAAO,GAAG1B,KAAK,CAAC0B,OAAO,CAAhB,IAAQ,CAAR,GAAd,GAAA;AACD;;AAED,YAAIrB,QAAQ,GAAGH,IAAI,CAAnB,OAAeA,EAAf;;AACA,YAAIG,QAAQ,KAAZ,IAAA,EAAuB;AACrB,iBAAOL,KAAK,CAAZ,IAAY,CAAZ;AADF,SAAA,MAEO;AACL,iBAAOD,QAAQ,CAAf,QAAe,CAAf;AACD;AACF;AACF;;AAED,QAAI,IAAI,CAAJ,iBAAA,CAAuB;AAAE4B,MAAAA,MAAM,EAAE;AAAV,KAAvB,CAAJ,EAA8C;AAC5C,UAAI1B,IAAI,CAAJA,QAAAA,KAAJ,MAAA,EAA8B;AAC5B,eAAA,SAAA;AACD;;AAED,UAAI2B,QAAQ,GAAG1B,IAAI,CAAJA,GAAAA,CAAf,UAAeA,CAAf;;AACA,UAAID,IAAI,CAAJA,QAAAA,KAAAA,QAAAA,KAA+B2B,QAAQ,CAARA,UAAAA,MAAyBA,QAAQ,CAApE,OAA4DA,EAAxD3B,CAAJ,EAAiF;AAC/E,eAAA,UAAA;AACD;;AAED,UAAI4B,GAAG,GAAG9B,QAAQ,CAAlB,QAAkB,CAAlB;AACA,UAAI,CAAJ,SAAA,EAAgB;;AAChB,cAAQE,IAAI,CAAZ,QAAA;AACE,aAAA,GAAA;AACE,iBAAO,CAAP,GAAA;;AACF,aAAA,GAAA;AACE,iBAAO,CAAP,GAAA;;AACF,aAAA,GAAA;AACE,iBAAO,CAAP,GAAA;;AACF,aAAA,GAAA;AACE,iBAAO,CAAP,GAAA;;AACF,aAAA,QAAA;AACE,iBAAO,OAAA,GAAA,KAAA,WAAA,GAAA,WAAA,GAA2C,CAAC,GAAGjB,QAAQ,CAAZ,OAAA,EAAlD,GAAkD,CAAlD;AAVJ;AAYD;;AAED,QAAIkB,IAAI,CAAR,iBAAIA,EAAJ,EAA8B;AAC5B,UAAI4B,GAAG,GAAP,EAAA;AACA,UAAIC,KAAK,GAAG7B,IAAI,CAAJA,GAAAA,CAAZ,UAAYA,CAAZ;;AACA,WAAK,IAAI8B,UAAU,GAAd,KAAA,EAAwBC,SAAS,GAAGnB,KAAK,CAALA,OAAAA,CAApC,UAAoCA,CAApC,EAA+DoB,GAAG,GAAlE,CAAA,EAAwEF,UAAU,GAAGC,SAAS,GAAA,UAAA,GAAgB,CAAC,GAAG9C,aAAa,CAAjB,OAAA,EAAnH,UAAmH,CAAnH,IAA6J;AAC3J,YAAA,KAAA;;AAEA,YAAA,SAAA,EAAe;AACb,cAAI+C,GAAG,IAAIF,UAAU,CAArB,MAAA,EAA8B;AAC9BG,UAAAA,KAAK,GAAGH,UAAU,CAACE,GAAnBC,EAAkB,CAAlBA;AAFF,SAAA,MAGO;AACLD,UAAAA,GAAG,GAAGF,UAAU,CAAhBE,IAAMF,EAANE;AACA,cAAIA,GAAG,CAAP,IAAA,EAAc;AACdC,UAAAA,KAAK,GAAGD,GAAG,CAAXC,KAAAA;AACD;;AAED,YAAIC,KAAK,GAAT,KAAA;AAEAA,QAAAA,KAAK,GAAGA,KAAK,CAAbA,QAAQA,EAARA;;AAEA,YAAIA,KAAK,CAAT,SAAA,EAAqB;AACnBN,UAAAA,GAAG,CAAHA,IAAAA,CAASM,KAAK,CAAdN,KAAAA;AADF,SAAA,MAEO;AACL,iBAAO9B,KAAK,CAAZ,KAAY,CAAZ;AACD;AACF;;AACD,aAAA,GAAA;AACD;;AAED,QAAIE,IAAI,CAAR,kBAAIA,EAAJ,EAA+B;AAC7B,UAAIZ,GAAG,GAAP,EAAA;AACA,UAAI+C,KAAK,GAAGnC,IAAI,CAAJA,GAAAA,CAAZ,YAAYA,CAAZ;;AACA,WAAK,IAAIoC,UAAU,GAAd,KAAA,EAAwBC,SAAS,GAAGzB,KAAK,CAALA,OAAAA,CAApC,UAAoCA,CAApC,EAA+D0B,GAAG,GAAlE,CAAA,EAAwEF,UAAU,GAAGC,SAAS,GAAA,UAAA,GAAgB,CAAC,GAAGpD,aAAa,CAAjB,OAAA,EAAnH,UAAmH,CAAnH,IAA6J;AAC3J,YAAA,KAAA;;AAEA,YAAA,SAAA,EAAe;AACb,cAAIqD,GAAG,IAAIF,UAAU,CAArB,MAAA,EAA8B;AAC9BG,UAAAA,KAAK,GAAGH,UAAU,CAACE,GAAnBC,EAAkB,CAAlBA;AAFF,SAAA,MAGO;AACLD,UAAAA,GAAG,GAAGF,UAAU,CAAhBE,IAAMF,EAANE;AACA,cAAIA,GAAG,CAAP,IAAA,EAAc;AACdC,UAAAA,KAAK,GAAGD,GAAG,CAAXC,KAAAA;AACD;;AAED,YAAIC,IAAI,GAAR,KAAA;;AAEA,YAAIA,IAAI,CAAJA,cAAAA,MAAyBA,IAAI,CAAjC,gBAA6BA,EAA7B,EAAsD;AACpD,iBAAO1C,KAAK,CAAZ,IAAY,CAAZ;AACD;;AACD,YAAI2C,OAAO,GAAGD,IAAI,CAAJA,GAAAA,CAAd,KAAcA,CAAd;AACA,YAAIE,GAAG,GAAP,OAAA;;AACA,YAAIF,IAAI,CAAJA,IAAAA,CAAJ,QAAA,EAAwB;AACtBE,UAAAA,GAAG,GAAGA,GAAG,CAATA,QAAMA,EAANA;;AACA,cAAI,CAACA,GAAG,CAAR,SAAA,EAAoB;AAClB,mBAAO5C,KAAK,CAAZ,OAAY,CAAZ;AACD;;AACD4C,UAAAA,GAAG,GAAGA,GAAG,CAATA,KAAAA;AALF,SAAA,MAMO,IAAIA,GAAG,CAAP,YAAIA,EAAJ,EAAwB;AAC7BA,UAAAA,GAAG,GAAGA,GAAG,CAAHA,IAAAA,CAANA,IAAAA;AADK,SAAA,MAEA;AACLA,UAAAA,GAAG,GAAGA,GAAG,CAAHA,IAAAA,CAANA,KAAAA;AACD;;AACD,YAAIC,SAAS,GAAGH,IAAI,CAAJA,GAAAA,CAAhB,OAAgBA,CAAhB;;AACA,YAAII,OAAO,GAAGD,SAAS,CAAvB,QAAcA,EAAd;;AACA,YAAI,CAACC,OAAO,CAAZ,SAAA,EAAwB;AACtB,iBAAO9C,KAAK,CAAZ,SAAY,CAAZ;AACD;;AACD8C,QAAAA,OAAO,GAAGA,OAAO,CAAjBA,KAAAA;AACAxD,QAAAA,GAAG,CAAHA,GAAG,CAAHA,GAAAA,OAAAA;AACD;;AACD,aAAA,GAAA;AACD;;AAED,QAAIY,IAAI,CAAR,mBAAIA,EAAJ,EAAgC;AAC9B,UAAI6C,YAAY,GAAhB,SAAA;AACA,UAAIC,IAAI,GAAGjD,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAApB,MAAoBA,CAAD,CAAnB;AACA,UAAI+C,aAAa,GAAjB,SAAA;AACAtD,MAAAA,SAAS,GAATA,YAAAA;AACA,UAAIuD,KAAK,GAAGnD,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAArB,OAAqBA,CAAD,CAApB;AACA,UAAIiD,cAAc,GAAlB,SAAA;AACAxD,MAAAA,SAAS,GAAGsD,aAAa,IAAzBtD,cAAAA;;AAEA,cAAQM,IAAI,CAAZ,QAAA;AACE,aAAA,IAAA;AACE,cAAI+C,IAAI,IAAR,aAAA,EAA2B;AACzBrD,YAAAA,SAAS,GAATA,IAAAA;AACA,mBAAA,IAAA;AACD;;AAED,cAAI,CAAJ,SAAA,EAAgB;AAEhB,iBAAOqD,IAAI,IAAX,KAAA;;AACF,aAAA,IAAA;AACE,cAAI,CAAA,IAAA,IAAA,aAAA,IAA0B,CAAA,KAAA,IAA9B,cAAA,EAAwD;AACtDrD,YAAAA,SAAS,GAATA,IAAAA;AACD;;AAED,cAAI,CAAJ,SAAA,EAAgB;AAEhB,iBAAOqD,IAAI,IAAX,KAAA;AAjBJ;AAmBD;;AAED,QAAI9C,IAAI,CAAR,kBAAIA,EAAJ,EAA+B;AAC7B,UAAIkD,KAAK,GAAGrD,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAArB,MAAqBA,CAAD,CAApB;;AACA,UAAI,CAAJ,SAAA,EAAgB;;AAChB,UAAImD,MAAM,GAAGtD,QAAQ,CAACG,IAAI,CAAJA,GAAAA,CAAtB,OAAsBA,CAAD,CAArB;;AACA,UAAI,CAAJ,SAAA,EAAgB;;AAEhB,cAAQD,IAAI,CAAZ,QAAA;AACE,aAAA,GAAA;AACE,iBAAOmD,KAAK,GAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,IAAA;AACE,iBAAOE,IAAI,CAAJA,GAAAA,CAAAA,KAAAA,EAAP,MAAOA,CAAP;;AACF,aAAA,GAAA;AACE,iBAAOF,KAAK,GAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,IAAA;AACE,iBAAOA,KAAK,IAAZ,MAAA;;AACF,aAAA,IAAA;AACE,iBAAOA,KAAK,IAAZ,MAAA;;AACF,aAAA,IAAA;AACE,iBAAOA,KAAK,IAAZ,MAAA;;AACF,aAAA,IAAA;AACE,iBAAOA,KAAK,IAAZ,MAAA;;AACF,aAAA,KAAA;AACE,iBAAOA,KAAK,KAAZ,MAAA;;AACF,aAAA,KAAA;AACE,iBAAOA,KAAK,KAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,GAAA;AACE,iBAAOA,KAAK,GAAZ,MAAA;;AACF,aAAA,IAAA;AACE,iBAAOA,KAAK,IAAZ,MAAA;;AACF,aAAA,IAAA;AACE,iBAAOA,KAAK,IAAZ,MAAA;;AACF,aAAA,KAAA;AACE,iBAAOA,KAAK,KAAZ,MAAA;AAxCJ;AA0CD;;AAED,QAAIlD,IAAI,CAAR,gBAAIA,EAAJ,EAA6B;AAC3B,UAAImB,MAAM,GAAGnB,IAAI,CAAJA,GAAAA,CAAb,QAAaA,CAAb;AACA,UAAIqD,OAAO,GAAG,KAAd,CAAA;AACA,UAAIC,IAAI,GAAG,KAAX,CAAA;;AAEA,UAAInC,MAAM,CAANA,YAAAA,MAAyB,CAACnB,IAAI,CAAJA,KAAAA,CAAAA,UAAAA,CAAsBmB,MAAM,CAANA,IAAAA,CAAtBnB,IAAAA,EAA1BmB,IAA0BnB,CAA1BmB,IAA2E7B,aAAa,CAAbA,OAAAA,CAAsB6B,MAAM,CAANA,IAAAA,CAAtB7B,IAAAA,KAA/E,CAAA,EAA6H;AAC3HgE,QAAAA,IAAI,GAAGC,MAAM,CAACxD,IAAI,CAAJA,MAAAA,CAAduD,IAAa,CAAbA;AACD;;AAED,UAAInC,MAAM,CAAV,kBAAIA,EAAJ,EAAiC;AAC/B,YAAIqC,OAAO,GAAGrC,MAAM,CAANA,GAAAA,CAAd,QAAcA,CAAd;;AACA,YAAIsC,SAAS,GAAGtC,MAAM,CAANA,GAAAA,CAAhB,UAAgBA,CAAhB;;AAEA,YAAIqC,OAAO,CAAPA,YAAAA,MAA0BC,SAAS,CAAnCD,YAA0BC,EAA1BD,IAAsDlE,aAAa,CAAbA,OAAAA,CAAsBkE,OAAO,CAAPA,IAAAA,CAAtBlE,IAAAA,KAAtDkE,CAAAA,IAAuGjE,eAAe,CAAfA,OAAAA,CAAwBkE,SAAS,CAATA,IAAAA,CAAxBlE,IAAAA,IAA3G,CAAA,EAA6J;AAC3J8D,UAAAA,OAAO,GAAGE,MAAM,CAACC,OAAO,CAAPA,IAAAA,CAAjBH,IAAgB,CAAhBA;AACAC,UAAAA,IAAI,GAAGD,OAAO,CAACI,SAAS,CAATA,IAAAA,CAAfH,IAAc,CAAdA;AACD;;AAED,YAAIE,OAAO,CAAPA,SAAAA,MAAuBC,SAAS,CAApC,YAA2BA,EAA3B,EAAqD;AACnD,cAAIC,KAAK,GAAG,CAAC,GAAG5E,QAAQ,CAAZ,OAAA,EAAsB0E,OAAO,CAAPA,IAAAA,CAAlC,KAAY,CAAZ;;AACA,cAAIE,KAAK,KAALA,QAAAA,IAAsBA,KAAK,KAA/B,QAAA,EAA8C;AAC5CL,YAAAA,OAAO,GAAGG,OAAO,CAAPA,IAAAA,CAAVH,KAAAA;AACAC,YAAAA,IAAI,GAAGD,OAAO,CAACI,SAAS,CAATA,IAAAA,CAAfH,IAAc,CAAdA;AACD;AACF;AACF;;AAED,UAAA,IAAA,EAAU;AACR,YAAIK,IAAI,GAAG3D,IAAI,CAAJA,GAAAA,CAAAA,WAAAA,EAAAA,GAAAA,CAAX,QAAWA,CAAX;AACA,YAAI,CAAJ,SAAA,EAAgB;AAEhB,eAAOsD,IAAI,CAAJA,KAAAA,CAAAA,OAAAA,EAAP,IAAOA,CAAP;AACD;AACF;;AAEDxD,IAAAA,KAAK,CAALA,IAAK,CAALA;AACD;AACF","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nvar INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  var res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction evaluate() {\n  var confident = true;\n  var deoptPath = void 0;\n  var seen = new _map2.default();\n\n  function deopt(path) {\n    if (!confident) return;\n    deoptPath = path;\n    confident = false;\n  }\n\n  var value = evaluate(this);\n  if (!confident) value = undefined;\n  return {\n    confident: confident,\n    deopt: deoptPath,\n    value: value\n  };\n\n  function evaluate(path) {\n    var node = path.node;\n\n\n    if (seen.has(node)) {\n      var existing = seen.get(node);\n      if (existing.resolved) {\n        return existing.value;\n      } else {\n        deopt(path);\n        return;\n      }\n    } else {\n      var item = { resolved: false };\n      seen.set(node, item);\n\n      var val = _evaluate(path);\n      if (confident) {\n        item.resolved = true;\n        item.value = val;\n      }\n      return val;\n    }\n  }\n\n  function _evaluate(path) {\n    if (!confident) return;\n\n    var node = path.node;\n\n\n    if (path.isSequenceExpression()) {\n      var exprs = path.get(\"expressions\");\n      return evaluate(exprs[exprs.length - 1]);\n    }\n\n    if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n      return node.value;\n    }\n\n    if (path.isNullLiteral()) {\n      return null;\n    }\n\n    if (path.isTemplateLiteral()) {\n      var str = \"\";\n\n      var i = 0;\n      var _exprs = path.get(\"expressions\");\n\n      for (var _iterator = node.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var elem = _ref;\n\n        if (!confident) break;\n\n        str += elem.value.cooked;\n\n        var expr = _exprs[i++];\n        if (expr) str += String(evaluate(expr));\n      }\n\n      if (!confident) return;\n      return str;\n    }\n\n    if (path.isConditionalExpression()) {\n      var testResult = evaluate(path.get(\"test\"));\n      if (!confident) return;\n      if (testResult) {\n        return evaluate(path.get(\"consequent\"));\n      } else {\n        return evaluate(path.get(\"alternate\"));\n      }\n    }\n\n    if (path.isExpressionWrapper()) {\n      return evaluate(path.get(\"expression\"));\n    }\n\n    if (path.isMemberExpression() && !path.parentPath.isCallExpression({ callee: node })) {\n      var property = path.get(\"property\");\n      var object = path.get(\"object\");\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        var _value = object.node.value;\n        var type = typeof _value === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(_value);\n        if (type === \"number\" || type === \"string\") {\n          return _value[property.node.name];\n        }\n      }\n    }\n\n    if (path.isReferencedIdentifier()) {\n      var binding = path.scope.getBinding(node.name);\n\n      if (binding && binding.constantViolations.length > 0) {\n        return deopt(binding.path);\n      }\n\n      if (binding && path.node.start < binding.path.node.end) {\n        return deopt(binding.path);\n      }\n\n      if (binding && binding.hasValue) {\n        return binding.value;\n      } else {\n        if (node.name === \"undefined\") {\n          return binding ? deopt(binding.path) : undefined;\n        } else if (node.name === \"Infinity\") {\n          return binding ? deopt(binding.path) : Infinity;\n        } else if (node.name === \"NaN\") {\n          return binding ? deopt(binding.path) : NaN;\n        }\n\n        var resolved = path.resolve();\n        if (resolved === path) {\n          return deopt(path);\n        } else {\n          return evaluate(resolved);\n        }\n      }\n    }\n\n    if (path.isUnaryExpression({ prefix: true })) {\n      if (node.operator === \"void\") {\n        return undefined;\n      }\n\n      var argument = path.get(\"argument\");\n      if (node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n        return \"function\";\n      }\n\n      var arg = evaluate(argument);\n      if (!confident) return;\n      switch (node.operator) {\n        case \"!\":\n          return !arg;\n        case \"+\":\n          return +arg;\n        case \"-\":\n          return -arg;\n        case \"~\":\n          return ~arg;\n        case \"typeof\":\n          return typeof arg === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(arg);\n      }\n    }\n\n    if (path.isArrayExpression()) {\n      var arr = [];\n      var elems = path.get(\"elements\");\n      for (var _iterator2 = elems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var _elem = _ref2;\n\n        _elem = _elem.evaluate();\n\n        if (_elem.confident) {\n          arr.push(_elem.value);\n        } else {\n          return deopt(_elem);\n        }\n      }\n      return arr;\n    }\n\n    if (path.isObjectExpression()) {\n      var obj = {};\n      var props = path.get(\"properties\");\n      for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var prop = _ref3;\n\n        if (prop.isObjectMethod() || prop.isSpreadProperty()) {\n          return deopt(prop);\n        }\n        var keyPath = prop.get(\"key\");\n        var key = keyPath;\n        if (prop.node.computed) {\n          key = key.evaluate();\n          if (!key.confident) {\n            return deopt(keyPath);\n          }\n          key = key.value;\n        } else if (key.isIdentifier()) {\n          key = key.node.name;\n        } else {\n          key = key.node.value;\n        }\n        var valuePath = prop.get(\"value\");\n        var _value2 = valuePath.evaluate();\n        if (!_value2.confident) {\n          return deopt(valuePath);\n        }\n        _value2 = _value2.value;\n        obj[key] = _value2;\n      }\n      return obj;\n    }\n\n    if (path.isLogicalExpression()) {\n      var wasConfident = confident;\n      var left = evaluate(path.get(\"left\"));\n      var leftConfident = confident;\n      confident = wasConfident;\n      var right = evaluate(path.get(\"right\"));\n      var rightConfident = confident;\n      confident = leftConfident && rightConfident;\n\n      switch (node.operator) {\n        case \"||\":\n          if (left && leftConfident) {\n            confident = true;\n            return left;\n          }\n\n          if (!confident) return;\n\n          return left || right;\n        case \"&&\":\n          if (!left && leftConfident || !right && rightConfident) {\n            confident = true;\n          }\n\n          if (!confident) return;\n\n          return left && right;\n      }\n    }\n\n    if (path.isBinaryExpression()) {\n      var _left = evaluate(path.get(\"left\"));\n      if (!confident) return;\n      var _right = evaluate(path.get(\"right\"));\n      if (!confident) return;\n\n      switch (node.operator) {\n        case \"-\":\n          return _left - _right;\n        case \"+\":\n          return _left + _right;\n        case \"/\":\n          return _left / _right;\n        case \"*\":\n          return _left * _right;\n        case \"%\":\n          return _left % _right;\n        case \"**\":\n          return Math.pow(_left, _right);\n        case \"<\":\n          return _left < _right;\n        case \">\":\n          return _left > _right;\n        case \"<=\":\n          return _left <= _right;\n        case \">=\":\n          return _left >= _right;\n        case \"==\":\n          return _left == _right;\n        case \"!=\":\n          return _left != _right;\n        case \"===\":\n          return _left === _right;\n        case \"!==\":\n          return _left !== _right;\n        case \"|\":\n          return _left | _right;\n        case \"&\":\n          return _left & _right;\n        case \"^\":\n          return _left ^ _right;\n        case \"<<\":\n          return _left << _right;\n        case \">>\":\n          return _left >> _right;\n        case \">>>\":\n          return _left >>> _right;\n      }\n    }\n\n    if (path.isCallExpression()) {\n      var callee = path.get(\"callee\");\n      var context = void 0;\n      var func = void 0;\n\n      if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name, true) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n        func = global[node.callee.name];\n      }\n\n      if (callee.isMemberExpression()) {\n        var _object = callee.get(\"object\");\n        var _property = callee.get(\"property\");\n\n        if (_object.isIdentifier() && _property.isIdentifier() && VALID_CALLEES.indexOf(_object.node.name) >= 0 && INVALID_METHODS.indexOf(_property.node.name) < 0) {\n          context = global[_object.node.name];\n          func = context[_property.node.name];\n        }\n\n        if (_object.isLiteral() && _property.isIdentifier()) {\n          var _type = (0, _typeof3.default)(_object.node.value);\n          if (_type === \"string\" || _type === \"number\") {\n            context = _object.node.value;\n            func = context[_property.node.name];\n          }\n        }\n      }\n\n      if (func) {\n        var args = path.get(\"arguments\").map(evaluate);\n        if (!confident) return;\n\n        return func.apply(context, args);\n      }\n    }\n\n    deopt(path);\n  }\n}"],"file":"evaluation.js"}