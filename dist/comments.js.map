{"version":3,"sources":["../node_modules/babel-traverse/lib/path/comments.js"],"names":["exports","node","trailing","leading","prev","next","type","line","value","content","key"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAO,CAAPA,yBAAAA,GAAAA,yBAAAA;AACAA,OAAO,CAAPA,UAAAA,GAAAA,UAAAA;AACAA,OAAO,CAAPA,WAAAA,GAAAA,WAAAA;;AACA,SAAA,yBAAA,GAAqC;AACnC,MAAI,OAAO,KAAP,GAAA,KAAJ,QAAA,EAAkC;AAElC,MAAIC,IAAI,GAAG,KAAX,IAAA;AACA,MAAI,CAAJ,IAAA,EAAW;AAEX,MAAIC,QAAQ,GAAGD,IAAI,CAAnB,gBAAA;AACA,MAAIE,OAAO,GAAGF,IAAI,CAAlB,eAAA;AACA,MAAI,CAAA,QAAA,IAAa,CAAjB,OAAA,EAA2B;AAE3B,MAAIG,IAAI,GAAG,KAAA,UAAA,CAAgB,KAAA,GAAA,GAA3B,CAAW,CAAX;AACA,MAAIC,IAAI,GAAG,KAAA,UAAA,CAAgB,KAAA,GAAA,GAA3B,CAAW,CAAX;AAEA,MAAI,CAACD,IAAI,CAAT,IAAA,EAAgBA,IAAI,GAAJA,IAAAA;AAChB,MAAI,CAACC,IAAI,CAAT,IAAA,EAAgBA,IAAI,GAAJA,IAAAA;AAEhBD,EAAAA,IAAI,CAAJA,WAAAA,CAAAA,UAAAA,EAAAA,OAAAA;AACAC,EAAAA,IAAI,CAAJA,WAAAA,CAAAA,SAAAA,EAAAA,QAAAA;AACD;;AAED,SAAA,UAAA,CAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAyC;AACvC,OAAA,WAAA,CAAA,IAAA,EAAuB,CAAC;AACtBC,IAAAA,IAAI,EAAEC,IAAI,GAAA,aAAA,GADY,cAAA;AAEtBC,IAAAA,KAAK,EAAEC;AAFe,GAAD,CAAvB;AAID;;AAED,SAAA,WAAA,CAAA,IAAA,EAAA,QAAA,EAAqC;AACnC,MAAI,CAAJ,QAAA,EAAe;AAEf,MAAIR,IAAI,GAAG,KAAX,IAAA;AACA,MAAI,CAAJ,IAAA,EAAW;AAEX,MAAIS,GAAG,GAAGJ,IAAI,GAAd,UAAA;;AAEA,MAAIL,IAAI,CAAR,GAAQ,CAAR,EAAe;AACbA,IAAAA,IAAI,CAAJA,GAAI,CAAJA,GAAYA,IAAI,CAAJA,GAAI,CAAJA,CAAAA,MAAAA,CAAZA,QAAYA,CAAZA;AADF,GAAA,MAEO;AACLA,IAAAA,IAAI,CAAJA,GAAI,CAAJA,GAAAA,QAAAA;AACD;AACF","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var trailing = node.trailingComments;\n  var leading = node.leadingComments;\n  if (!trailing && !leading) return;\n\n  var prev = this.getSibling(this.key - 1);\n  var next = this.getSibling(this.key + 1);\n\n  if (!prev.node) prev = next;\n  if (!next.node) next = prev;\n\n  prev.addComments(\"trailing\", leading);\n  next.addComments(\"leading\", trailing);\n}\n\nfunction addComment(type, content, line) {\n  this.addComments(type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}\n\nfunction addComments(type, comments) {\n  if (!comments) return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var key = type + \"Comments\";\n\n  if (node[key]) {\n    node[key] = node[key].concat(comments);\n  } else {\n    node[key] = comments;\n  }\n}"],"file":"comments.js"}