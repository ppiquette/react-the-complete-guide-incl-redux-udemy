{"version":3,"sources":["../node_modules/babel-generator/node_modules/jsesc/jsesc.js"],"names":["freeExports","freeModule","module","freeGlobal","root","object","hasOwnProperty","forOwn","callback","extend","destination","forEach","length","array","index","toString","isArray","isObject","isString","isNumber","isFunction","isMap","isSet","singleEscapes","regexSingleEscape","regexDigit","regexWhitelist","jsesc","defaults","json","options","quote","compact","indent","lowercaseHex","oldIndent","inline1","inline2","newLine","isEmpty","useBinNumbers","useOctNumbers","useDecNumbers","useHexNumbers","argument","Array","result","JSON","String","tmp","string","character","first","second","codePoint","hexadecimal","charCode","longhand","escaped","define"],"mappings":"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","sourcesContent":["/*! https://mths.be/jsesc v1.3.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar forOwn = function(object, callback) {\n\t\tvar key;\n\t\tfor (key in object) {\n\t\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\t\tcallback(key, object[key]);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar extend = function(destination, source) {\n\t\tif (!source) {\n\t\t\treturn destination;\n\t\t}\n\t\tforOwn(source, function(key, value) {\n\t\t\tdestination[key] = value;\n\t\t});\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index]);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isObject = function(value) {\n\t\t// This is a very simple check, but it’s good enough for what we need.\n\t\treturn toString.call(value) == '[object Object]';\n\t};\n\tvar isString = function(value) {\n\t\treturn typeof value == 'string' ||\n\t\t\ttoString.call(value) == '[object String]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\tvar isFunction = function(value) {\n\t\t// In a perfect world, the `typeof` check would be sufficient. However,\n\t\t// in Chrome 1–12, `typeof /x/ == 'object'`, and in IE 6–8\n\t\t// `typeof alert == 'object'` and similar for other host objects.\n\t\treturn typeof value == 'function' ||\n\t\t\ttoString.call(value) == '[object Function]';\n\t};\n\tvar isMap = function(value) {\n\t\treturn toString.call(value) == '[object Map]';\n\t};\n\tvar isSet = function(value) {\n\t\treturn toString.call(value) == '[object Set]';\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\tvar singleEscapes = {\n\t\t'\"': '\\\\\"',\n\t\t'\\'': '\\\\\\'',\n\t\t'\\\\': '\\\\\\\\',\n\t\t'\\b': '\\\\b',\n\t\t'\\f': '\\\\f',\n\t\t'\\n': '\\\\n',\n\t\t'\\r': '\\\\r',\n\t\t'\\t': '\\\\t'\n\t\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t\t// '\\v': '\\\\x0B'\n\t};\n\tvar regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n\n\tvar regexDigit = /[0-9]/;\n\tvar regexWhitelist = /[ !#-&\\(-\\[\\]-~]/;\n\n\tvar jsesc = function(argument, options) {\n\t\t// Handle options\n\t\tvar defaults = {\n\t\t\t'escapeEverything': false,\n\t\t\t'escapeEtago': false,\n\t\t\t'quotes': 'single',\n\t\t\t'wrap': false,\n\t\t\t'es6': false,\n\t\t\t'json': false,\n\t\t\t'compact': true,\n\t\t\t'lowercaseHex': false,\n\t\t\t'numbers': 'decimal',\n\t\t\t'indent': '\\t',\n\t\t\t'__indent__': '',\n\t\t\t'__inline1__': false,\n\t\t\t'__inline2__': false\n\t\t};\n\t\tvar json = options && options.json;\n\t\tif (json) {\n\t\t\tdefaults.quotes = 'double';\n\t\t\tdefaults.wrap = true;\n\t\t}\n\t\toptions = extend(defaults, options);\n\t\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\t\toptions.quotes = 'single';\n\t\t}\n\t\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\t\tvar compact = options.compact;\n\t\tvar indent = options.indent;\n\t\tvar lowercaseHex = options.lowercaseHex;\n\t\tvar oldIndent = '';\n\t\tvar inline1 = options.__inline1__;\n\t\tvar inline2 = options.__inline2__;\n\t\tvar newLine = compact ? '' : '\\n';\n\t\tvar result;\n\t\tvar isEmpty = true;\n\t\tvar useBinNumbers = options.numbers == 'binary';\n\t\tvar useOctNumbers = options.numbers == 'octal';\n\t\tvar useDecNumbers = options.numbers == 'decimal';\n\t\tvar useHexNumbers = options.numbers == 'hexadecimal';\n\n\t\tif (json && argument && isFunction(argument.toJSON)) {\n\t\t\targument = argument.toJSON();\n\t\t}\n\n\t\tif (!isString(argument)) {\n\t\t\tif (isMap(argument)) {\n\t\t\t\tif (argument.size == 0) {\n\t\t\t\t\treturn 'new Map()';\n\t\t\t\t}\n\t\t\t\tif (!compact) {\n\t\t\t\t\toptions.__inline1__ = true;\n\t\t\t\t}\n\t\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t\t}\n\t\t\tif (isSet(argument)) {\n\t\t\t\tif (argument.size == 0) {\n\t\t\t\t\treturn 'new Set()';\n\t\t\t\t}\n\t\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t\t}\n\t\t\tif (isArray(argument)) {\n\t\t\t\tresult = [];\n\t\t\t\toptions.wrap = true;\n\t\t\t\tif (inline1) {\n\t\t\t\t\toptions.__inline1__ = false;\n\t\t\t\t\toptions.__inline2__ = true;\n\t\t\t\t} else {\n\t\t\t\t\toldIndent = options.__indent__;\n\t\t\t\t\tindent += oldIndent;\n\t\t\t\t\toptions.__indent__ = indent;\n\t\t\t\t}\n\t\t\t\tforEach(argument, function(value) {\n\t\t\t\t\tisEmpty = false;\n\t\t\t\t\tif (inline2) {\n\t\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t\t}\n\t\t\t\t\tresult.push(\n\t\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\t\tjsesc(value, options)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (isEmpty) {\n\t\t\t\t\treturn '[]';\n\t\t\t\t}\n\t\t\t\tif (inline2) {\n\t\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t\t}\n\t\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t\t} else if (isNumber(argument)) {\n\t\t\t\tif (json) {\n\t\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\t\treturn JSON.stringify(argument);\n\t\t\t\t}\n\t\t\t\tif (useDecNumbers) {\n\t\t\t\t\treturn String(argument);\n\t\t\t\t}\n\t\t\t\tif (useHexNumbers) {\n\t\t\t\t\tvar tmp = argument.toString(16);\n\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\ttmp = tmp.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\treturn '0x' + tmp;\n\t\t\t\t}\n\t\t\t\tif (useBinNumbers) {\n\t\t\t\t\treturn '0b' + argument.toString(2);\n\t\t\t\t}\n\t\t\t\tif (useOctNumbers) {\n\t\t\t\t\treturn '0o' + argument.toString(8);\n\t\t\t\t}\n\t\t\t} else if (!isObject(argument)) {\n\t\t\t\tif (json) {\n\t\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t\t}\n\t\t\t\treturn String(argument);\n\t\t\t} else { // it’s an object\n\t\t\t\tresult = [];\n\t\t\t\toptions.wrap = true;\n\t\t\t\toldIndent = options.__indent__;\n\t\t\t\tindent += oldIndent;\n\t\t\t\toptions.__indent__ = indent;\n\t\t\t\tforOwn(argument, function(key, value) {\n\t\t\t\t\tisEmpty = false;\n\t\t\t\t\tresult.push(\n\t\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\t\tjsesc(value, options)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (isEmpty) {\n\t\t\t\t\treturn '{}';\n\t\t\t\t}\n\t\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t\t}\n\t\t}\n\n\t\tvar string = argument;\n\t\t// Loop over each code unit in the string and escape it\n\t\tvar index = -1;\n\t\tvar length = string.length;\n\t\tvar first;\n\t\tvar second;\n\t\tvar codePoint;\n\t\tresult = '';\n\t\twhile (++index < length) {\n\t\t\tvar character = string.charAt(index);\n\t\t\tif (options.es6) {\n\t\t\t\tfirst = string.charCodeAt(index);\n\t\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\t\tlength > index + 1 // there is a next code unit\n\t\t\t\t) {\n\t\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\t\tcodePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t\t\tvar hexadecimal = codePoint.toString(16);\n\t\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult += '\\\\u{' + hexadecimal + '}';\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options.escapeEverything) {\n\t\t\t\tif (regexWhitelist.test(character)) {\n\t\t\t\t\t// It’s a printable ASCII character that is not `\"`, `'` or `\\`,\n\t\t\t\t\t// so don’t escape it.\n\t\t\t\t\tresult += character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (character == '\"') {\n\t\t\t\t\tresult += quote == character ? '\\\\\"' : character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (character == '\\'') {\n\t\t\t\t\tresult += quote == character ? '\\\\\\'' : character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tcharacter == '\\0' &&\n\t\t\t\t!json &&\n\t\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t\t) {\n\t\t\t\tresult += '\\\\0';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (regexSingleEscape.test(character)) {\n\t\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\t\tresult += singleEscapes[character];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar charCode = character.charCodeAt(0);\n\t\t\tvar hexadecimal = charCode.toString(16);\n\t\t\tif (!lowercaseHex) {\n\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t}\n\t\t\tvar longhand = hexadecimal.length > 2 || json;\n\t\t\tvar escaped = '\\\\' + (longhand ? 'u' : 'x') +\n\t\t\t\t('0000' + hexadecimal).slice(longhand ? -4 : -2);\n\t\t\tresult += escaped;\n\t\t\tcontinue;\n\t\t}\n\t\tif (options.wrap) {\n\t\t\tresult = quote + result + quote;\n\t\t}\n\t\tif (options.escapeEtago) {\n\t\t\t// https://mathiasbynens.be/notes/etago\n\t\t\treturn result.replace(/<\\/(script|style)/gi, '<\\\\/$1');\n\t\t}\n\t\treturn result;\n\t};\n\n\tjsesc.version = '1.3.0';\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn jsesc;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = jsesc;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.jsesc = jsesc;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.jsesc = jsesc;\n\t}\n\n}(this));\n"],"file":"jsesc.js"}