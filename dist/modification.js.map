{"version":3,"sources":["../node_modules/babel-traverse/lib/path/modification.js"],"names":["exports","_typeof2","require","_typeof3","_interopRequireDefault","_getIterator2","_getIterator3","_cache","_hoister","_hoister2","_index","_index2","_babelTypes","t","_interopRequireWildcard","obj","newObj","Object","default","nodes","Array","paths","i","to","from","node","path","parentPath","parent","container","listKey","key","contexts","_iterator","_isArray","_i","_ref","_path","_iterator2","_isArray2","_i2","_ref2","context","last","isIdentifier","temp","msg","type","length","scope","arguments","hoister"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports._maybePopFromStatements = _maybePopFromStatements;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _hoister2 = _interopRequireDefault(_hoister);\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction insertBefore(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") || this.parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertBefore(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.push(this.node);\n      this._replaceWith(t.blockStatement(nodes));\n    } else {\n      throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n    }\n  }\n\n  return [this];\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n\n  var paths = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var to = from + i;\n    var node = nodes[i];\n    this.container.splice(to, 0, node);\n\n    if (this.context) {\n      var path = this.context.create(this.parent, this.container, to, this.listKey);\n\n      if (this.context.queue) path.pushContext(this.context);\n      paths.push(path);\n    } else {\n      paths.push(_index2.default.get({\n        parentPath: this.parentPath,\n        parent: this.parent,\n        container: this.container,\n        listKey: this.listKey,\n        key: to\n      }));\n    }\n  }\n\n  var contexts = this._getQueueContexts();\n\n  for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _path = _ref;\n\n    _path.setScope();\n    _path.debug(function () {\n      return \"Inserted.\";\n    });\n\n    for (var _iterator2 = contexts, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var context = _ref2;\n\n      context.maybeQueue(_path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction _maybePopFromStatements(nodes) {\n  var last = nodes[nodes.length - 1];\n  var isIdentifier = t.isIdentifier(last) || t.isExpressionStatement(last) && t.isIdentifier(last.expression);\n\n  if (isIdentifier && !this.isCompletionRecord()) {\n    nodes.pop();\n  }\n}\n\nfunction insertAfter(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertAfter(nodes);\n  } else if (this.isNodeType(\"Expression\") || this.parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      var temp = this.scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", temp, this.node)));\n      nodes.push(t.expressionStatement(temp));\n    }\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertAfter(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.unshift(this.node);\n      this._replaceWith(t.blockStatement(nodes));\n    } else {\n      throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n    }\n  }\n\n  return [this];\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  var paths = _cache.path.get(this.parent);\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (nodes.constructor !== Array) {\n    nodes = [nodes];\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    var msg = void 0;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if ((typeof node === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(node)) !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index2.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      var type = Array.isArray(node) ? \"array\" : typeof node === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(node);\n      throw new Error(\"Node list \" + msg + \" with the index of \" + i + \" and type of \" + type);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  var path = _index2.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey: listKey,\n    key: 0\n  });\n\n  return path.insertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  var container = this.node[listKey];\n  var path = _index2.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey: listKey,\n    key: container.length\n  });\n\n  return path.replaceWithMultiple(nodes);\n}\n\nfunction hoist() {\n  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.scope;\n\n  var hoister = new _hoister2.default(this, scope);\n  return hoister.run();\n}"],"file":"modification.js"}