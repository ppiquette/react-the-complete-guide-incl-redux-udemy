{"version":3,"sources":["../node_modules/babel-cli/lib/babel/dir.js"],"names":["_stringify","require","_stringify2","_interopRequireDefault","obj","default","outputFileSync","slash","path","util","fs","module","relative","dest","commander","data","sourceFileName","sourceMapTarget","mapLoc","src","write","stat","dirname","handleFile","filenames","chokidar","watcher","persistent","ignoreInitial","awaitWriteFinish","stabilityThreshold","pollInterval","console","err"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAxB,sCAAwB,CAAxB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAAxC,UAAwC,CAAxC;;AAEA,SAAA,sBAAA,CAAA,GAAA,EAAqC;AAAE,SAAOC,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;AAAEC,IAAAA,OAAO,EAAED;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,cAAc,GAAGL,OAAO,CAA5B,kBAA4B,CAA5B;;AACA,IAAIM,KAAK,GAAGN,OAAO,CAAnB,OAAmB,CAAnB;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAlB,MAAkB,CAAlB;;AACA,IAAIQ,IAAI,GAAGR,OAAO,CAAlB,QAAkB,CAAlB;;AACA,IAAIS,EAAE,GAAGT,OAAO,CAAhB,IAAgB,CAAhB;;AAEAU,MAAM,CAANA,OAAAA,GAAiB,UAAA,SAAA,EAAA,SAAA,EAAgC;AAC/C,WAAA,KAAA,CAAA,GAAA,EAAA,QAAA,EAA8B;AAC5BC,IAAAA,QAAQ,GAAGA,QAAQ,CAARA,OAAAA,CAAAA,WAAAA,EAAAA,EAAAA,IAAXA,KAAAA;AAEA,QAAIC,IAAI,GAAGL,IAAI,CAAJA,IAAAA,CAAUM,SAAS,CAAnBN,MAAAA,EAAX,QAAWA,CAAX;AAEA,QAAIO,IAAI,GAAG,IAAI,CAAJ,OAAA,CAAA,GAAA,EAAkB;AAC3BC,MAAAA,cAAc,EAAET,KAAK,CAACC,IAAI,CAAJA,QAAAA,CAAcK,IAAI,GAAlBL,KAAAA,EADK,GACLA,CAAD,CADM;AAE3BS,MAAAA,eAAe,EAAET,IAAI,CAAJA,QAAAA,CAAAA,QAAAA;AAFU,KAAlB,CAAX;AAIA,QAAI,CAACM,SAAS,CAAV,SAAA,IAAwBC,IAAI,CAAhC,OAAA,EAA0C;;AAE1C,QAAIA,IAAI,CAAJA,GAAAA,IAAYD,SAAS,CAArBC,UAAAA,IAAoCD,SAAS,CAATA,UAAAA,KAAxC,QAAA,EAA2E;AACzE,UAAII,MAAM,GAAGL,IAAI,GAAjB,MAAA;AACAE,MAAAA,IAAI,CAAJA,IAAAA,GAAYN,IAAI,CAAJA,mBAAAA,CAAyBM,IAAI,CAA7BN,IAAAA,EAAZM,MAAYN,CAAZM;AACAT,MAAAA,cAAc,CAAA,MAAA,EAAS,CAAC,GAAGJ,WAAW,CAAf,OAAA,EAAyBa,IAAI,CAApDT,GAAuB,CAAT,CAAdA;AACD;;AAEDA,IAAAA,cAAc,CAAA,IAAA,EAAOS,IAAI,CAAzBT,IAAc,CAAdA;AACAG,IAAAA,IAAI,CAAJA,KAAAA,CAAAA,GAAAA,EAAAA,IAAAA;AAEAA,IAAAA,IAAI,CAAJA,GAAAA,CAASU,GAAG,GAAHA,MAAAA,GAATV,IAAAA;AACD;;AAED,WAAA,UAAA,CAAA,GAAA,EAAA,QAAA,EAAmC;AACjC,QAAIA,IAAI,CAAJA,YAAAA,CAAJ,GAAIA,CAAJ,EAA4B;;AAE5B,QAAIA,IAAI,CAAJA,UAAAA,CAAAA,QAAAA,EAA0BK,SAAS,CAAvC,UAAIL,CAAJ,EAAqD;AACnDW,MAAAA,KAAK,CAAA,GAAA,EAALA,QAAK,CAALA;AADF,KAAA,MAEO,IAAIN,SAAS,CAAb,SAAA,EAAyB;AAC9B,UAAID,IAAI,GAAGL,IAAI,CAAJA,IAAAA,CAAUM,SAAS,CAAnBN,MAAAA,EAAX,QAAWA,CAAX;AACAF,MAAAA,cAAc,CAAA,IAAA,EAAOI,EAAE,CAAFA,YAAAA,CAArBJ,GAAqBI,CAAP,CAAdJ;AACAG,MAAAA,IAAI,CAAJA,KAAAA,CAAAA,GAAAA,EAAAA,IAAAA;AACD;AACF;;AAED,WAAA,MAAA,CAAA,QAAA,EAA0B;AACxB,QAAI,CAACC,EAAE,CAAFA,UAAAA,CAAL,QAAKA,CAAL,EAA8B;AAE9B,QAAIW,IAAI,GAAGX,EAAE,CAAFA,QAAAA,CAAX,QAAWA,CAAX;;AAEA,QAAIW,IAAI,CAAJA,WAAAA,CAAJ,QAAIA,CAAJ,EAAgC;AAC9B,UAAIC,OAAO,GAAX,QAAA;AAEAb,MAAAA,IAAI,CAAJA,OAAAA,CAAAA,OAAAA,EAAAA,OAAAA,CAA8B,UAAA,QAAA,EAAoB;AAChD,YAAIU,GAAG,GAAGX,IAAI,CAAJA,IAAAA,CAAAA,OAAAA,EAAV,QAAUA,CAAV;AACAe,QAAAA,UAAU,CAAA,GAAA,EAAVA,QAAU,CAAVA;AAFFd,OAAAA;AAHF,KAAA,MAOO;AACLW,MAAAA,KAAK,CAAA,QAAA,EAALA,QAAK,CAALA;AACD;AACF;;AAED,MAAI,CAACN,SAAS,CAAd,gBAAA,EAAiC;AAC/BU,IAAAA,SAAS,CAATA,OAAAA,CAAAA,MAAAA;AACD;;AAED,MAAIV,SAAS,CAAb,KAAA,EAAqB;AACnB,QAAIW,QAAQ,GAAGhB,IAAI,CAAnB,eAAeA,EAAf;AAEAe,IAAAA,SAAS,CAATA,OAAAA,CAAkB,UAAA,OAAA,EAAmB;AACnC,UAAIE,OAAO,GAAG,QAAQ,CAAR,KAAA,CAAA,OAAA,EAAwB;AACpCC,QAAAA,UAAU,EAD0B,IAAA;AAEpCC,QAAAA,aAAa,EAFuB,IAAA;AAGpCC,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,kBAAkB,EADF,EAAA;AAEhBC,UAAAA,YAAY,EAAE;AAFE;AAHkB,OAAxB,CAAd;AASA,OAAA,KAAA,EAAA,QAAA,EAAA,OAAA,CAA0B,UAAA,IAAA,EAAgB;AACxCL,QAAAA,OAAO,CAAPA,EAAAA,CAAAA,IAAAA,EAAiB,UAAA,QAAA,EAAoB;AACnC,cAAId,QAAQ,GAAGJ,IAAI,CAAJA,QAAAA,CAAAA,OAAAA,EAAAA,QAAAA,KAAf,QAAA;;AACA,cAAI;AACFe,YAAAA,UAAU,CAAA,QAAA,EAAVA,QAAU,CAAVA;AADF,WAAA,CAEE,OAAA,GAAA,EAAY;AACZS,YAAAA,OAAO,CAAPA,KAAAA,CAAcC,GAAG,CAAjBD,KAAAA;AACD;AANHN,SAAAA;AADF,OAAA;AAVFF,KAAAA;AAqBD;AAjFHb,CAAAA","sourcesContent":["\"use strict\";\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar outputFileSync = require(\"output-file-sync\");\nvar slash = require(\"slash\");\nvar path = require(\"path\");\nvar util = require(\"./util\");\nvar fs = require(\"fs\");\n\nmodule.exports = function (commander, filenames) {\n  function write(src, relative) {\n    relative = relative.replace(/\\.(\\w*?)$/, \"\") + \".js\";\n\n    var dest = path.join(commander.outDir, relative);\n\n    var data = util.compile(src, {\n      sourceFileName: slash(path.relative(dest + \"/..\", src)),\n      sourceMapTarget: path.basename(relative)\n    });\n    if (!commander.copyFiles && data.ignored) return;\n\n    if (data.map && commander.sourceMaps && commander.sourceMaps !== \"inline\") {\n      var mapLoc = dest + \".map\";\n      data.code = util.addSourceMappingUrl(data.code, mapLoc);\n      outputFileSync(mapLoc, (0, _stringify2.default)(data.map));\n    }\n\n    outputFileSync(dest, data.code);\n    util.chmod(src, dest);\n\n    util.log(src + \" -> \" + dest);\n  }\n\n  function handleFile(src, filename) {\n    if (util.shouldIgnore(src)) return;\n\n    if (util.canCompile(filename, commander.extensions)) {\n      write(src, filename);\n    } else if (commander.copyFiles) {\n      var dest = path.join(commander.outDir, filename);\n      outputFileSync(dest, fs.readFileSync(src));\n      util.chmod(src, dest);\n    }\n  }\n\n  function handle(filename) {\n    if (!fs.existsSync(filename)) return;\n\n    var stat = fs.statSync(filename);\n\n    if (stat.isDirectory(filename)) {\n      var dirname = filename;\n\n      util.readdir(dirname).forEach(function (filename) {\n        var src = path.join(dirname, filename);\n        handleFile(src, filename);\n      });\n    } else {\n      write(filename, filename);\n    }\n  }\n\n  if (!commander.skipInitialBuild) {\n    filenames.forEach(handle);\n  }\n\n  if (commander.watch) {\n    var chokidar = util.requireChokidar();\n\n    filenames.forEach(function (dirname) {\n      var watcher = chokidar.watch(dirname, {\n        persistent: true,\n        ignoreInitial: true,\n        awaitWriteFinish: {\n          stabilityThreshold: 50,\n          pollInterval: 10\n        }\n      });\n\n      [\"add\", \"change\"].forEach(function (type) {\n        watcher.on(type, function (filename) {\n          var relative = path.relative(dirname, filename) || filename;\n          try {\n            handleFile(filename, relative);\n          } catch (err) {\n            console.error(err.stack);\n          }\n        });\n      });\n    });\n  }\n};"],"file":"dir.js"}