{"version":3,"sources":["../node_modules/babel-plugin-transform-es2015-parameters/lib/rest.js"],"names":["exports","_getIterator2","require","_getIterator3","_interopRequireDefault","_babelTemplate","_babelTemplate2","_babelTypes","t","_interopRequireWildcard","obj","newObj","Object","default","buildRest","restIndex","restIndexImpure","restLength","memberExpressionOptimisationVisitor","Scope","path","state","Flow","oldNoOptimise","ReferencedIdentifier","node","parentPath","object","grandparentPath","argsOptEligible","operator","cause","call","BindingIdentifier","_ref","index","offset","scope","temp","id","kind","ARGUMENTS","INDEX","REF","OFFSET","visitor","Function","hasRest","rest","argsId","references","argumentsNode","outerBinding","candidates","name","deopted","_iterator","_isArray","Array","_i","_ref3","_ref4","_path","optimiseIndexGetter","optimiseLengthGetter","_ref5","start","key","len","arrKey","arrLen","loop","ARRAY_KEY","ARRAY_LEN","START","ARRAY","KEY","LEN","target"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.visitor = undefined;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildRest = (0, _babelTemplate2.default)(\"\\n  for (var LEN = ARGUMENTS.length,\\n           ARRAY = Array(ARRAY_LEN),\\n           KEY = START;\\n       KEY < LEN;\\n       KEY++) {\\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\\n  }\\n\");\n\nvar restIndex = (0, _babelTemplate2.default)(\"\\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\\n\");\n\nvar restIndexImpure = (0, _babelTemplate2.default)(\"\\n  REF = INDEX, ARGUMENTS.length <= REF ? undefined : ARGUMENTS[REF]\\n\");\n\nvar restLength = (0, _babelTemplate2.default)(\"\\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\\n\");\n\nvar memberExpressionOptimisationVisitor = {\n  Scope: function Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.name, state.outerBinding)) {\n      path.skip();\n    }\n  },\n  Flow: function Flow(path) {\n    if (path.isTypeCastExpression()) return;\n\n    path.skip();\n  },\n\n\n  \"Function|ClassProperty\": function FunctionClassProperty(path, state) {\n    var oldNoOptimise = state.noOptimise;\n    state.noOptimise = true;\n    path.traverse(memberExpressionOptimisationVisitor, state);\n    state.noOptimise = oldNoOptimise;\n\n    path.skip();\n  },\n\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    var node = path.node;\n\n    if (node.name === \"arguments\") {\n      state.deopted = true;\n    }\n\n    if (node.name !== state.name) return;\n\n    if (state.noOptimise) {\n      state.deopted = true;\n    } else {\n      var parentPath = path.parentPath;\n\n      if (parentPath.listKey === \"params\" && parentPath.key < state.offset) {\n        return;\n      }\n\n      if (parentPath.isMemberExpression({ object: node })) {\n        var grandparentPath = parentPath.parentPath;\n\n        var argsOptEligible = !state.deopted && !(grandparentPath.isAssignmentExpression() && parentPath.node === grandparentPath.node.left || grandparentPath.isLVal() || grandparentPath.isForXStatement() || grandparentPath.isUpdateExpression() || grandparentPath.isUnaryExpression({ operator: \"delete\" }) || (grandparentPath.isCallExpression() || grandparentPath.isNewExpression()) && parentPath.node === grandparentPath.node.callee);\n\n        if (argsOptEligible) {\n          if (parentPath.node.computed) {\n            if (parentPath.get(\"property\").isBaseType(\"number\")) {\n              state.candidates.push({ cause: \"indexGetter\", path: path });\n              return;\n            }\n          } else if (parentPath.node.property.name === \"length\") {\n              state.candidates.push({ cause: \"lengthGetter\", path: path });\n              return;\n            }\n        }\n      }\n\n      if (state.offset === 0 && parentPath.isSpreadElement()) {\n        var call = parentPath.parentPath;\n        if (call.isCallExpression() && call.node.arguments.length === 1) {\n          state.candidates.push({ cause: \"argSpread\", path: path });\n          return;\n        }\n      }\n\n      state.references.push(path);\n    }\n  },\n  BindingIdentifier: function BindingIdentifier(_ref, state) {\n    var node = _ref.node;\n\n    if (node.name === state.name) {\n      state.deopted = true;\n    }\n  }\n};\nfunction hasRest(node) {\n  return t.isRestElement(node.params[node.params.length - 1]);\n}\n\nfunction optimiseIndexGetter(path, argsId, offset) {\n  var index = void 0;\n\n  if (t.isNumericLiteral(path.parent.property)) {\n    index = t.numericLiteral(path.parent.property.value + offset);\n  } else if (offset === 0) {\n    index = path.parent.property;\n  } else {\n    index = t.binaryExpression(\"+\", path.parent.property, t.numericLiteral(offset));\n  }\n\n  var scope = path.scope;\n\n  if (!scope.isPure(index)) {\n    var temp = scope.generateUidIdentifierBasedOnNode(index);\n    scope.push({ id: temp, kind: \"var\" });\n    path.parentPath.replaceWith(restIndexImpure({\n      ARGUMENTS: argsId,\n      INDEX: index,\n      REF: temp\n    }));\n  } else {\n    path.parentPath.replaceWith(restIndex({\n      ARGUMENTS: argsId,\n      INDEX: index\n    }));\n  }\n}\n\nfunction optimiseLengthGetter(path, argsId, offset) {\n  if (offset) {\n    path.parentPath.replaceWith(restLength({\n      ARGUMENTS: argsId,\n      OFFSET: t.numericLiteral(offset)\n    }));\n  } else {\n    path.replaceWith(argsId);\n  }\n}\n\nvar visitor = exports.visitor = {\n  Function: function Function(path) {\n    var node = path.node,\n        scope = path.scope;\n\n    if (!hasRest(node)) return;\n\n    var rest = node.params.pop().argument;\n\n    var argsId = t.identifier(\"arguments\");\n\n    argsId._shadowedFunctionLiteral = path;\n\n    var state = {\n      references: [],\n      offset: node.params.length,\n\n      argumentsNode: argsId,\n      outerBinding: scope.getBindingIdentifier(rest.name),\n\n      candidates: [],\n\n      name: rest.name,\n\n      deopted: false\n    };\n\n    path.traverse(memberExpressionOptimisationVisitor, state);\n\n    if (!state.deopted && !state.references.length) {\n      for (var _iterator = state.candidates, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref3;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref3 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref3 = _i.value;\n        }\n\n        var _ref4 = _ref3;\n        var _path = _ref4.path,\n            cause = _ref4.cause;\n\n        switch (cause) {\n          case \"indexGetter\":\n            optimiseIndexGetter(_path, argsId, state.offset);\n            break;\n          case \"lengthGetter\":\n            optimiseLengthGetter(_path, argsId, state.offset);\n            break;\n          default:\n            _path.replaceWith(argsId);\n        }\n      }\n      return;\n    }\n\n    state.references = state.references.concat(state.candidates.map(function (_ref5) {\n      var path = _ref5.path;\n      return path;\n    }));\n\n    state.deopted = state.deopted || !!node.shadow;\n\n    var start = t.numericLiteral(node.params.length);\n    var key = scope.generateUidIdentifier(\"key\");\n    var len = scope.generateUidIdentifier(\"len\");\n\n    var arrKey = key;\n    var arrLen = len;\n    if (node.params.length) {\n      arrKey = t.binaryExpression(\"-\", key, start);\n\n      arrLen = t.conditionalExpression(t.binaryExpression(\">\", len, start), t.binaryExpression(\"-\", len, start), t.numericLiteral(0));\n    }\n\n    var loop = buildRest({\n      ARGUMENTS: argsId,\n      ARRAY_KEY: arrKey,\n      ARRAY_LEN: arrLen,\n      START: start,\n      ARRAY: rest,\n      KEY: key,\n      LEN: len\n    });\n\n    if (state.deopted) {\n      loop._blockHoist = node.params.length + 1;\n      node.body.body.unshift(loop);\n    } else {\n      loop._blockHoist = 1;\n\n      var target = path.getEarliestCommonAncestorFrom(state.references).getStatementParent();\n\n      target.findParent(function (path) {\n        if (path.isLoop()) {\n          target = path;\n        } else {\n          return path.isFunction();\n        }\n      });\n\n      target.insertBefore(loop);\n    }\n  }\n};"],"file":"rest.js"}