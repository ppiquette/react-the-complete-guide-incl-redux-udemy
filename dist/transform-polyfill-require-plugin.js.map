{"version":3,"sources":["../node_modules/babel-preset-env/lib/transform-polyfill-require-plugin.js"],"names":["exports","t","_ref","declar","path","isPolyfillSource","polyfill","requireType","createImportDeclaration","createRequireStatement","imports","arr","createImport","regenerator","isPolyfillImport","ImportDeclaration","createImports","state","Program","_this","isRequire","bodyPath","name","visitor","pre","value"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function createImportDeclaration(polyfill) {\n    var declar = t.importDeclaration([], t.stringLiteral(polyfill));\n    declar._blockHoist = 3;\n    return declar;\n  }\n\n  function createRequireStatement(polyfill) {\n    return t.expressionStatement(t.callExpression(t.identifier(\"require\"), [t.stringLiteral(polyfill)]));\n  }\n\n  function isRequire(path) {\n    return t.isExpressionStatement(path.node) && t.isCallExpression(path.node.expression) && t.isIdentifier(path.node.expression.callee) && path.node.expression.callee.name === \"require\" && path.node.expression.arguments.length === 1 && t.isStringLiteral(path.node.expression.arguments[0]) && isPolyfillSource(path.node.expression.arguments[0].value);\n  }\n\n  function createImport(polyfill, requireType, core) {\n    if (core) {\n      polyfill = \"core-js/modules/\" + polyfill;\n    }\n\n    if (requireType === \"import\") {\n      return createImportDeclaration(polyfill);\n    } else {\n      return createRequireStatement(polyfill);\n    }\n  }\n\n  function createImports(polyfills, requireType, regenerator) {\n    var imports = polyfills.filter(function (el, i, arr) {\n      return arr.indexOf(el) === i;\n    }).map(function (polyfill) {\n      return createImport(polyfill, requireType, true);\n    });\n\n    return [].concat(imports, [regenerator && createImport(\"regenerator-runtime/runtime\", requireType)]).filter(Boolean);\n  }\n\n  var isPolyfillImport = {\n    ImportDeclaration: function ImportDeclaration(path, state) {\n      if (path.node.specifiers.length === 0 && isPolyfillSource(path.node.source.value)) {\n        this.numPolyfillImports++;\n        if (this.numPolyfillImports > 1) {\n          path.remove();\n          return;\n        }\n\n        path.replaceWithMultiple(createImports(state.opts.polyfills, \"import\", state.opts.regenerator));\n      }\n    },\n    Program: function Program(path, state) {\n      var _this = this;\n\n      if (!state.opts.polyfills) {\n        throw path.buildCodeFrameError(\"\\nThere was an issue in \\\"babel-preset-env\\\" such that\\nthe \\\"polyfills\\\" option was not correctly passed\\nto the \\\"transform-polyfill-require\\\" plugin\\n\");\n      }\n      path.get(\"body\").forEach(function (bodyPath) {\n        if (isRequire(bodyPath)) {\n          _this.numPolyfillImports++;\n          if (_this.numPolyfillImports > 1) {\n            path.remove();\n            return;\n          }\n\n          bodyPath.replaceWithMultiple(createImports(state.opts.polyfills, \"require\", state.opts.regenerator));\n        }\n      });\n    }\n  };\n\n  return {\n    name: \"transform-polyfill-require\",\n    visitor: isPolyfillImport,\n    pre: function pre() {\n      this.numPolyfillImports = 0;\n    }\n  };\n};\n\nfunction isPolyfillSource(value) {\n  return value === \"babel-polyfill\" || value === \"core-js\";\n}"],"file":"transform-polyfill-require-plugin.js"}