{"version":3,"sources":["../node_modules/babel-core/node_modules/json5/lib/cli.js"],"names":["FS","require","JSON5","Path","USAGE","args","process","console","cwd","files","path","basename","dirname","json5","obj","json","JSON"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAhB,IAAgB,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAnB,SAAmB,CAAnB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAlB,MAAkB,CAAlB;;AAEA,IAAIG,KAAK,GAAG,CAAA,wCAAA,EAAA,uEAAA,EAAA,IAAA,CAAZ,IAAY,CAAZ,C,CAKA;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAlB,IAAA;;AAEA,IAAID,IAAI,CAAJA,MAAAA,GAAAA,CAAAA,IAAmBA,IAAI,CAAJA,CAAI,CAAJA,KAAvB,IAAA,EAAyC;AACrCE,EAAAA,OAAO,CAAPA,KAAAA,CAAAA,KAAAA;AACAD,EAAAA,OAAO,CAAPA,IAAAA,CAAAA,CAAAA;AACH;;AAED,IAAIE,GAAG,GAAGF,OAAO,CAAjB,GAAUA,EAAV;AACA,IAAIG,KAAK,GAAGJ,IAAI,CAAJA,KAAAA,CAAZ,CAAYA,CAAZ,C,CAEA;;AACAI,KAAK,CAALA,OAAAA,CAAc,UAAA,IAAA,EAAgB;AAC1B,MAAIC,IAAI,GAAGP,IAAI,CAAJA,OAAAA,CAAAA,GAAAA,EAAX,IAAWA,CAAX;AACA,MAAIQ,QAAQ,GAAGR,IAAI,CAAJA,QAAAA,CAAAA,IAAAA,EAAf,QAAeA,CAAf;AACA,MAAIS,OAAO,GAAGT,IAAI,CAAJA,OAAAA,CAAd,IAAcA,CAAd;AAEA,MAAIU,KAAK,GAAGb,EAAE,CAAFA,YAAAA,CAAAA,IAAAA,EAAZ,MAAYA,CAAZ;AACA,MAAIc,GAAG,GAAGZ,KAAK,CAALA,KAAAA,CAAV,KAAUA,CAAV;AACA,MAAIa,IAAI,GAAGC,IAAI,CAAJA,SAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAPe,CAOfA,CAAX,CAP0B,CAOe;;AAEzCN,EAAAA,IAAI,GAAGP,IAAI,CAAJA,IAAAA,CAAAA,OAAAA,EAAmBQ,QAAQ,GAAlCD,OAAOP,CAAPO;AACAV,EAAAA,EAAE,CAAFA,aAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,MAAAA;AAVJS,CAAAA","sourcesContent":["#!/usr/bin/env node\n\n// cli.js\n// JSON5 command-line interface.\n//\n// This is pretty minimal for now; just supports compiling files via `-c`.\n// TODO More useful functionality, like output path, watch, etc.?\n\nvar FS = require('fs');\nvar JSON5 = require('./json5');\nvar Path = require('path');\n\nvar USAGE = [\n    'Usage: json5 -c path/to/file.json5 ...',\n    'Compiles JSON5 files into sibling JSON files with the same basenames.',\n].join('\\n');\n\n// if valid, args look like [node, json5, -c, file1, file2, ...]\nvar args = process.argv;\n\nif (args.length < 4 || args[2] !== '-c') {\n    console.error(USAGE);\n    process.exit(1);\n}\n\nvar cwd = process.cwd();\nvar files = args.slice(3);\n\n// iterate over each file and convert JSON5 files to JSON:\nfiles.forEach(function (file) {\n    var path = Path.resolve(cwd, file);\n    var basename = Path.basename(path, '.json5');\n    var dirname = Path.dirname(path);\n\n    var json5 = FS.readFileSync(path, 'utf8');\n    var obj = JSON5.parse(json5);\n    var json = JSON.stringify(obj, null, 4); // 4 spaces; TODO configurable?\n\n    path = Path.join(dirname, basename + '.json');\n    FS.writeFileSync(path, json, 'utf8');\n});\n"],"file":"cli.js"}