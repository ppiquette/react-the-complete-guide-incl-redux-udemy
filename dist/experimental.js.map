{"version":3,"sources":["../node_modules/babel-types/lib/definitions/experimental.js"],"names":["_index","require","_index2","_interopRequireDefault","obj","default","builder","visitor","aliases","fields","argument","validate","left","right","body","expression","exported"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _index = require(\"./index\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ForAwaitStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: (0, _index.assertNodeType)(\"VariableDeclaration\", \"LVal\")\n    },\n    right: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\n(0, _index2.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: {}\n});\n\n(0, _index2.default)(\"Import\", {\n  aliases: [\"Expression\"]\n});\n\n(0, _index2.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index2.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _index.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\n(0, _index2.default)(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _index.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n\n(0, _index2.default)(\"RestProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)(\"LVal\")\n    }\n  }\n});\n\n(0, _index2.default)(\"SpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)(\"Expression\")\n    }\n  }\n});"],"file":"experimental.js"}