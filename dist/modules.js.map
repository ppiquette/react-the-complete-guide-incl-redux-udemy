{"version":3,"sources":["../node_modules/babel-generator/lib/generators/modules.js"],"names":["exports","_babelTypes","require","t","_interopRequireWildcard","obj","newObj","Object","node","ExportDeclaration","declar","specifiers","hasSpecial","first"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.ImportSpecifier = ImportSpecifier;\nexports.ImportDefaultSpecifier = ImportDefaultSpecifier;\nexports.ExportDefaultSpecifier = ExportDefaultSpecifier;\nexports.ExportSpecifier = ExportSpecifier;\nexports.ExportNamespaceSpecifier = ExportNamespaceSpecifier;\nexports.ExportAllDeclaration = ExportAllDeclaration;\nexports.ExportNamedDeclaration = ExportNamedDeclaration;\nexports.ExportDefaultDeclaration = ExportDefaultDeclaration;\nexports.ImportDeclaration = ImportDeclaration;\nexports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction ImportSpecifier(node) {\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  this.print(node.imported, node);\n  if (node.local && node.local.name !== node.imported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.local, node);\n  }\n}\n\nfunction ImportDefaultSpecifier(node) {\n  this.print(node.local, node);\n}\n\nfunction ExportDefaultSpecifier(node) {\n  this.print(node.exported, node);\n}\n\nfunction ExportSpecifier(node) {\n  this.print(node.local, node);\n  if (node.exported && node.local.name !== node.exported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.exported, node);\n  }\n}\n\nfunction ExportNamespaceSpecifier(node) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.exported, node);\n}\n\nfunction ExportAllDeclaration(node) {\n  this.word(\"export\");\n  this.space();\n  this.token(\"*\");\n  this.space();\n  this.word(\"from\");\n  this.space();\n  this.print(node.source, node);\n  this.semicolon();\n}\n\nfunction ExportNamedDeclaration() {\n  this.word(\"export\");\n  this.space();\n  ExportDeclaration.apply(this, arguments);\n}\n\nfunction ExportDefaultDeclaration() {\n  this.word(\"export\");\n  this.space();\n  this.word(\"default\");\n  this.space();\n  ExportDeclaration.apply(this, arguments);\n}\n\nfunction ExportDeclaration(node) {\n  if (node.declaration) {\n    var declar = node.declaration;\n    this.print(declar, node);\n    if (!t.isStatement(declar)) this.semicolon();\n  } else {\n    if (node.exportKind === \"type\") {\n      this.word(\"type\");\n      this.space();\n    }\n\n    var specifiers = node.specifiers.slice(0);\n\n    var hasSpecial = false;\n    while (true) {\n      var first = specifiers[0];\n      if (t.isExportDefaultSpecifier(first) || t.isExportNamespaceSpecifier(first)) {\n        hasSpecial = true;\n        this.print(specifiers.shift(), node);\n        if (specifiers.length) {\n          this.token(\",\");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length || !specifiers.length && !hasSpecial) {\n      this.token(\"{\");\n      if (specifiers.length) {\n        this.space();\n        this.printList(specifiers, node);\n        this.space();\n      }\n      this.token(\"}\");\n    }\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ImportDeclaration(node) {\n  this.word(\"import\");\n  this.space();\n\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  var specifiers = node.specifiers.slice(0);\n  if (specifiers && specifiers.length) {\n    while (true) {\n      var first = specifiers[0];\n      if (t.isImportDefaultSpecifier(first) || t.isImportNamespaceSpecifier(first)) {\n        this.print(specifiers.shift(), node);\n        if (specifiers.length) {\n          this.token(\",\");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length) {\n      this.token(\"{\");\n      this.space();\n      this.printList(specifiers, node);\n      this.space();\n      this.token(\"}\");\n    }\n\n    this.space();\n    this.word(\"from\");\n    this.space();\n  }\n\n  this.print(node.source, node);\n  this.semicolon();\n}\n\nfunction ImportNamespaceSpecifier(node) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.local, node);\n}"],"file":"modules.js"}