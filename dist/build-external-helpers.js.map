{"version":3,"sources":["../node_modules/babel-core/lib/tools/build-external-helpers.js"],"names":["exports","outputType","arguments","namespace","t","builder","buildHelpers","tree","build","global","umd","var","buildVar","messages","_babelGenerator2","_babelHelpers","require","helpers","_interopRequireWildcard","_babelGenerator","_interopRequireDefault","_babelMessages","_babelTemplate","_babelTemplate2","_babelTypes","obj","default","newObj","Object","buildUmdWrapper","body","container","FACTORY_PARAMETERS","BROWSER_ARGUMENTS","COMMON_ARGUMENTS","AMD_ARGUMENTS","FACTORY_BODY","UMD_ROOT","whitelist","key","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (whitelist) {\n  var outputType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"global\";\n\n  var namespace = t.identifier(\"babelHelpers\");\n\n  var builder = function builder(body) {\n    return buildHelpers(body, namespace, whitelist);\n  };\n\n  var tree = void 0;\n\n  var build = {\n    global: buildGlobal,\n    umd: buildUmd,\n    var: buildVar\n  }[outputType];\n\n  if (build) {\n    tree = build(namespace, builder);\n  } else {\n    throw new Error(messages.get(\"unsupportedOutputType\", outputType));\n  }\n\n  return (0, _babelGenerator2.default)(tree).code;\n};\n\nvar _babelHelpers = require(\"babel-helpers\");\n\nvar helpers = _interopRequireWildcard(_babelHelpers);\n\nvar _babelGenerator = require(\"babel-generator\");\n\nvar _babelGenerator2 = _interopRequireDefault(_babelGenerator);\n\nvar _babelMessages = require(\"babel-messages\");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar buildUmdWrapper = (0, _babelTemplate2.default)(\"\\n  (function (root, factory) {\\n    if (typeof define === \\\"function\\\" && define.amd) {\\n      define(AMD_ARGUMENTS, factory);\\n    } else if (typeof exports === \\\"object\\\") {\\n      factory(COMMON_ARGUMENTS);\\n    } else {\\n      factory(BROWSER_ARGUMENTS);\\n    }\\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\\n    FACTORY_BODY\\n  });\\n\");\n\nfunction buildGlobal(namespace, builder) {\n  var body = [];\n  var container = t.functionExpression(null, [t.identifier(\"global\")], t.blockStatement(body));\n  var tree = t.program([t.expressionStatement(t.callExpression(container, [helpers.get(\"selfGlobal\")]))]);\n\n  body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(namespace, t.assignmentExpression(\"=\", t.memberExpression(t.identifier(\"global\"), namespace), t.objectExpression([])))]));\n\n  builder(body);\n\n  return tree;\n}\n\nfunction buildUmd(namespace, builder) {\n  var body = [];\n  body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(namespace, t.identifier(\"global\"))]));\n\n  builder(body);\n\n  return t.program([buildUmdWrapper({\n    FACTORY_PARAMETERS: t.identifier(\"global\"),\n    BROWSER_ARGUMENTS: t.assignmentExpression(\"=\", t.memberExpression(t.identifier(\"root\"), namespace), t.objectExpression([])),\n    COMMON_ARGUMENTS: t.identifier(\"exports\"),\n    AMD_ARGUMENTS: t.arrayExpression([t.stringLiteral(\"exports\")]),\n    FACTORY_BODY: body,\n    UMD_ROOT: t.identifier(\"this\")\n  })]);\n}\n\nfunction buildVar(namespace, builder) {\n  var body = [];\n  body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(namespace, t.objectExpression([]))]));\n  builder(body);\n  body.push(t.expressionStatement(namespace));\n  return t.program(body);\n}\n\nfunction buildHelpers(body, namespace, whitelist) {\n  helpers.list.forEach(function (name) {\n    if (whitelist && whitelist.indexOf(name) < 0) return;\n\n    var key = t.identifier(name);\n    body.push(t.expressionStatement(t.assignmentExpression(\"=\", t.memberExpression(namespace, key), helpers.get(name))));\n  });\n}\nmodule.exports = exports[\"default\"];"],"file":"build-external-helpers.js"}