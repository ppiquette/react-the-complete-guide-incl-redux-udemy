{"version":3,"sources":["../node_modules/babel-generator/lib/generators/jsx.js"],"names":["exports","_getIterator2","require","_getIterator3","_interopRequireDefault","obj","default","node","open","_iterator","_isArray","Array","_i","_ref","child","separator","spaceSeparator"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.JSXAttribute = JSXAttribute;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXSpreadChild = JSXSpreadChild;\nexports.JSXText = JSXText;\nexports.JSXElement = JSXElement;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction JSXAttribute(node) {\n  this.print(node.name, node);\n  if (node.value) {\n    this.token(\"=\");\n    this.print(node.value, node);\n  }\n}\n\nfunction JSXIdentifier(node) {\n  this.word(node.name);\n}\n\nfunction JSXNamespacedName(node) {\n  this.print(node.namespace, node);\n  this.token(\":\");\n  this.print(node.name, node);\n}\n\nfunction JSXMemberExpression(node) {\n  this.print(node.object, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction JSXSpreadAttribute(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.argument, node);\n  this.token(\"}\");\n}\n\nfunction JSXExpressionContainer(node) {\n  this.token(\"{\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXSpreadChild(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXText(node) {\n  this.token(node.value);\n}\n\nfunction JSXElement(node) {\n  var open = node.openingElement;\n  this.print(open, node);\n  if (open.selfClosing) return;\n\n  this.indent();\n  for (var _iterator = node.children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var child = _ref;\n\n    this.print(child, node);\n  }\n  this.dedent();\n\n  this.print(node.closingElement, node);\n}\n\nfunction spaceSeparator() {\n  this.space();\n}\n\nfunction JSXOpeningElement(node) {\n  this.token(\"<\");\n  this.print(node.name, node);\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, node, { separator: spaceSeparator });\n  }\n  if (node.selfClosing) {\n    this.space();\n    this.token(\"/>\");\n  } else {\n    this.token(\">\");\n  }\n}\n\nfunction JSXClosingElement(node) {\n  this.token(\"</\");\n  this.print(node.name, node);\n  this.token(\">\");\n}\n\nfunction JSXEmptyExpression() {}"],"file":"jsx.js"}