{"version":3,"sources":["../node_modules/babel-generator/lib/node/parentheses.js"],"names":["exports","_babelTypes","require","t","_interopRequireWildcard","obj","newObj","Object","PRECEDENCE","in","instanceof","parent","isFirstInStatement","considerArrow","parentOp","parentPos","nodeOp","node","nodePos","considerDefaultExports","object","callee","UnaryLike","test","ConditionalExpression","_ref","arguments","_ref$considerArrow","_ref$considerDefaultE","i","printStack","expression","declaration","body","left"],"mappings":"AAAA;;AAEAA,OAAO,CAAPA,UAAAA,GAAAA,IAAAA;AACAA,OAAO,CAAPA,eAAAA,GAA0BA,OAAO,CAAPA,sBAAAA,GAA1BA,SAAAA;AACAA,OAAO,CAAPA,sBAAAA,GAAAA,sBAAAA;AACAA,OAAO,CAAPA,gBAAAA,GAAAA,gBAAAA;AACAA,OAAO,CAAPA,gBAAAA,GAAAA,gBAAAA;AACAA,OAAO,CAAPA,YAAAA,GAAAA,YAAAA;AACAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;AACAA,OAAO,CAAPA,gBAAAA,GAAAA,gBAAAA;AACAA,OAAO,CAAPA,kBAAAA,GAAAA,kBAAAA;AACAA,OAAO,CAAPA,eAAAA,GAAAA,eAAAA;AACAA,OAAO,CAAPA,eAAAA,GAAAA,eAAAA;AACAA,OAAO,CAAPA,SAAAA,GAAAA,SAAAA;AACAA,OAAO,CAAPA,kBAAAA,GAAAA,kBAAAA;AACAA,OAAO,CAAPA,uBAAAA,GAAAA,uBAAAA;AACAA,OAAO,CAAPA,qBAAAA,GAAAA,qBAAAA;AACAA,OAAO,CAAPA,oBAAAA,GAAAA,oBAAAA;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAzB,aAAyB,CAAzB;;AAEA,IAAIC,CAAC,GAAGC,uBAAuB,CAA/B,WAA+B,CAA/B;;AAEA,SAAA,uBAAA,CAAA,GAAA,EAAsC;AAAE,MAAIC,GAAG,IAAIA,GAAG,CAAd,UAAA,EAA2B;AAAE,WAAA,GAAA;AAA7B,GAAA,MAAgD;AAAE,QAAIC,MAAM,GAAV,EAAA;;AAAiB,QAAID,GAAG,IAAP,IAAA,EAAiB;AAAE,WAAK,IAAL,GAAA,IAAA,GAAA,EAAqB;AAAE,YAAIE,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAAJ,GAAIA,CAAJ,EAAoDD,MAAM,CAANA,GAAM,CAANA,GAAcD,GAAG,CAAjBC,GAAiB,CAAjBA;AAAyB;AAAE;;AAACA,IAAAA,MAAM,CAANA,OAAAA,GAAAA,GAAAA;AAAsB,WAAA,MAAA;AAAgB;AAAE;;AAE7Q,IAAIE,UAAU,GAAG;AACf,QADe,CAAA;AAEf,QAFe,CAAA;AAGf,OAHe,CAAA;AAIf,OAJe,CAAA;AAKf,OALe,CAAA;AAMf,QANe,CAAA;AAOf,SAPe,CAAA;AAQf,QARe,CAAA;AASf,SATe,CAAA;AAUf,OAVe,CAAA;AAWf,OAXe,CAAA;AAYf,QAZe,CAAA;AAaf,QAbe,CAAA;AAcfC,EAAAA,EAAE,EAda,CAAA;AAefC,EAAAA,UAAU,EAfK,CAAA;AAgBf,QAhBe,CAAA;AAiBf,QAjBe,CAAA;AAkBf,SAlBe,CAAA;AAmBf,OAnBe,CAAA;AAoBf,OApBe,CAAA;AAqBf,OArBe,CAAA;AAsBf,OAtBe,CAAA;AAuBf,OAvBe,CAAA;AAwBf,QAAM;AAxBS,CAAjB;;AA2BA,SAAA,sBAAA,CAAA,IAAA,EAAA,MAAA,EAA8C;AAC5C,SAAOP,CAAC,CAADA,qBAAAA,CAAP,MAAOA,CAAP;AACD;;AAEDH,OAAO,CAAPA,sBAAAA,GAAAA,sBAAAA;;AACA,SAAA,gBAAA,CAAA,IAAA,EAAA,MAAA,EAAwC;AACtC,SAAOG,CAAC,CAADA,kBAAAA,CAAAA,MAAAA,KAAgCQ,MAAM,CAANA,MAAAA,KAAvC,IAAA;AACD;;AAED,SAAA,gBAAA,CAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAoD;AAClD,SAAOC,kBAAkB,CAAA,UAAA,EAAa;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAAb,CAAzB;AACD;;AAED,SAAA,YAAA,CAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAgD;AAC9C,SAAOD,kBAAkB,CAAzB,UAAyB,CAAzB;AACD;;AAED,SAAA,MAAA,CAAA,IAAA,EAAA,MAAA,EAA8B;AAC5B,MAAI,CAACT,CAAC,CAADA,gBAAAA,CAAAA,MAAAA,KAA8BA,CAAC,CAADA,eAAAA,CAA/B,MAA+BA,CAA/B,KAA6DQ,MAAM,CAANA,MAAAA,KAA7D,IAAA,IAAuFR,CAAC,CAADA,WAAAA,CAAvF,MAAuFA,CAAvF,IAAgHA,CAAC,CAADA,kBAAAA,CAAAA,MAAAA,KAAgCQ,MAAM,CAANA,MAAAA,KAAhJ,IAAA,IAA0KR,CAAC,CAADA,iBAAAA,CAA9K,MAA8KA,CAA9K,EAA2M;AACzM,WAAA,IAAA;AACD;;AAED,MAAIA,CAAC,CAADA,QAAAA,CAAJ,MAAIA,CAAJ,EAAwB;AACtB,QAAIW,QAAQ,GAAGH,MAAM,CAArB,QAAA;AACA,QAAII,SAAS,GAAGP,UAAU,CAA1B,QAA0B,CAA1B;AAEA,QAAIQ,MAAM,GAAGC,IAAI,CAAjB,QAAA;AACA,QAAIC,OAAO,GAAGV,UAAU,CAAxB,MAAwB,CAAxB;;AAEA,QAAIO,SAAS,KAATA,OAAAA,IAAyBJ,MAAM,CAANA,KAAAA,KAAzBI,IAAAA,IAAkD,CAACZ,CAAC,CAADA,mBAAAA,CAAnDY,MAAmDZ,CAAnDY,IAAoFA,SAAS,GAAjG,OAAA,EAA6G;AAC3G,aAAA,IAAA;AACD;AACF;;AAED,SAAA,KAAA;AACD;;AAED,SAAA,gBAAA,CAAA,IAAA,EAAA,MAAA,EAAwC;AACtC,SAAOE,IAAI,CAAJA,QAAAA,KAAAA,IAAAA,KAA2Bd,CAAC,CAADA,oBAAAA,CAAAA,MAAAA,KAAkCA,CAAC,CAADA,KAAAA,CAApE,MAAoEA,CAA7Dc,CAAP;AACD;;AAED,SAAA,kBAAA,CAAA,IAAA,EAAA,MAAA,EAA0C;AAExC,MAAId,CAAC,CAADA,cAAAA,CAAAA,MAAAA,KAA4BA,CAAC,CAADA,gBAAAA,CAA5BA,MAA4BA,CAA5BA,IAA0DA,CAAC,CAADA,iBAAAA,CAA1DA,MAA0DA,CAA1DA,IAAyFA,CAAC,CAADA,aAAAA,CAAAA,MAAAA,KAA2BQ,MAAM,CAANA,IAAAA,KAApHR,IAAAA,IAA4IA,CAAC,CAADA,gBAAAA,CAAAA,MAAAA,KAA8BQ,MAAM,CAANA,IAAAA,KAA1KR,IAAAA,IAAkMA,CAAC,CAADA,gBAAAA,CAAAA,MAAAA,KAA8BQ,MAAM,CAANA,KAAAA,KAAhOR,IAAAA,IAAyPA,CAAC,CAADA,iBAAAA,CAAAA,MAAAA,KAA+BQ,MAAM,CAANA,YAAAA,KAAxRR,IAAAA,IAAwTA,CAAC,CAADA,qBAAAA,CAAAA,MAAAA,KAAmCQ,MAAM,CAANA,UAAAA,KAA/V,IAAA,EAA2X;AACzX,WAAA,KAAA;AACD;;AAED,SAAA,IAAA;AACD;;AAED,SAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAuC;AACrC,SAAOR,CAAC,CAADA,QAAAA,CAAAA,MAAAA,KAAsBA,CAAC,CAADA,WAAAA,CAAtBA,MAAsBA,CAAtBA,IAA+CA,CAAC,CAADA,gBAAAA,CAA/CA,MAA+CA,CAA/CA,IAA6EA,CAAC,CAADA,kBAAAA,CAA7EA,MAA6EA,CAA7EA,IAA6GA,CAAC,CAADA,eAAAA,CAA7GA,MAA6GA,CAA7GA,IAA0IA,CAAC,CAADA,uBAAAA,CAAAA,MAAAA,KAAqCc,IAAI,KAAKN,MAAM,CAArM,IAAA;AACD;;AAEDX,OAAO,CAAPA,eAAAA,GAAAA,eAAAA;;AACA,SAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAmD;AACjD,SAAOY,kBAAkB,CAAA,UAAA,EAAa;AAAEO,IAAAA,sBAAsB,EAAE;AAA1B,GAAb,CAAzB;AACD;;AAED,SAAA,SAAA,CAAA,IAAA,EAAA,MAAA,EAAiC;AAC/B,SAAO,CAAC,CAAD,kBAAA,CAAA,MAAA,EAA6B;AAAEC,IAAAA,MAAM,EAAEH;AAAV,GAA7B,KAAkD,CAAC,CAAD,gBAAA,CAAA,MAAA,EAA2B;AAAEI,IAAAA,MAAM,EAAEJ;AAAV,GAA3B,CAAlD,IAAkG,CAAC,CAAD,eAAA,CAAA,MAAA,EAA0B;AAAEI,IAAAA,MAAM,EAAEJ;AAAV,GAA1B,CAAzG;AACD;;AAED,SAAA,kBAAA,CAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAsD;AACpD,SAAOL,kBAAkB,CAAA,UAAA,EAAa;AAAEO,IAAAA,sBAAsB,EAAE;AAA1B,GAAb,CAAzB;AACD;;AAED,SAAA,uBAAA,CAAA,IAAA,EAAA,MAAA,EAA+C;AAC7C,MAAIhB,CAAC,CAADA,mBAAAA,CAAAA,MAAAA,KAAiCA,CAAC,CAADA,kBAAAA,CAAjCA,MAAiCA,CAAjCA,IAAiEA,CAAC,CAADA,mBAAAA,CAAjEA,MAAiEA,CAAjEA,IAAkGA,CAAC,CAADA,iBAAAA,CAAlGA,MAAkGA,CAAlGA,IAAiIA,CAAC,CAADA,0BAAAA,CAArI,MAAqIA,CAArI,EAA2K;AACzK,WAAA,IAAA;AACD;;AAED,SAAOmB,SAAS,CAAA,IAAA,EAAhB,MAAgB,CAAhB;AACD;;AAED,SAAA,qBAAA,CAAA,IAAA,EAAA,MAAA,EAA6C;AAC3C,MAAI,CAAC,CAAD,WAAA,CAAA,MAAA,KAAyBnB,CAAC,CAADA,QAAAA,CAAzB,MAAyBA,CAAzB,IAA+C,CAAC,CAAD,uBAAA,CAAA,MAAA,EAAkC;AAAEoB,IAAAA,IAAI,EAAEN;AAAR,GAAlC,CAA/C,IAAoGd,CAAC,CAADA,iBAAAA,CAAxG,MAAwGA,CAAxG,EAAqI;AACnI,WAAA,IAAA;AACD;;AAED,SAAOmB,SAAS,CAAA,IAAA,EAAhB,MAAgB,CAAhB;AACD;;AAED,SAAA,oBAAA,CAAA,IAAA,EAAoC;AAClC,MAAInB,CAAC,CAADA,eAAAA,CAAkBc,IAAI,CAA1B,IAAId,CAAJ,EAAkC;AAChC,WAAA,IAAA;AADF,GAAA,MAEO;AACL,WAAOqB,qBAAqB,CAArBA,KAAAA,CAAAA,SAAAA,EAAP,SAAOA,CAAP;AACD;AACF;;AAED,SAAA,kBAAA,CAAA,UAAA,EAAwC;AACtC,MAAIC,IAAI,GAAGC,SAAS,CAATA,MAAAA,GAAAA,CAAAA,IAAwBA,SAAS,CAATA,CAAS,CAATA,KAAxBA,SAAAA,GAAqDA,SAAS,CAA9DA,CAA8D,CAA9DA,GAAX,EAAA;AAAA,MACIC,kBAAkB,GAAGF,IAAI,CAD7B,aAAA;AAAA,MAEIZ,aAAa,GAAGc,kBAAkB,KAAlBA,SAAAA,GAAAA,KAAAA,GAFpB,kBAAA;AAAA,MAGIC,qBAAqB,GAAGH,IAAI,CAHhC,sBAAA;AAAA,MAIIN,sBAAsB,GAAGS,qBAAqB,KAArBA,SAAAA,GAAAA,KAAAA,GAJ7B,qBAAA;;AAMA,MAAIC,CAAC,GAAGC,UAAU,CAAVA,MAAAA,GAAR,CAAA;AACA,MAAIb,IAAI,GAAGa,UAAU,CAArB,CAAqB,CAArB;AACAD,EAAAA,CAAC;AACD,MAAIlB,MAAM,GAAGmB,UAAU,CAAvB,CAAuB,CAAvB;;AACA,SAAOD,CAAC,GAAR,CAAA,EAAc;AACZ,QAAI,CAAC,CAAD,qBAAA,CAAA,MAAA,EAAgC;AAAEE,MAAAA,UAAU,EAAEd;AAAd,KAAhC,KAAyDd,CAAC,CAADA,0BAAAA,CAAzD,MAAyDA,CAAzD,IAAiGgB,sBAAsB,IAAI,CAAC,CAAD,0BAAA,CAAA,MAAA,EAAqC;AAAEa,MAAAA,WAAW,EAAEf;AAAf,KAArC,CAA3H,IAA0LJ,aAAa,IAAI,CAAC,CAAD,yBAAA,CAAA,MAAA,EAAoC;AAAEoB,MAAAA,IAAI,EAAEhB;AAAR,KAApC,CAA/M,EAAoQ;AAClQ,aAAA,IAAA;AACD;;AAED,QAAI,CAAC,CAAD,gBAAA,CAAA,MAAA,EAA2B;AAAEI,MAAAA,MAAM,EAAEJ;AAAV,KAA3B,KAAgDd,CAAC,CAADA,oBAAAA,CAAAA,MAAAA,KAAkCQ,MAAM,CAANA,WAAAA,CAAAA,CAAAA,MAAlF,IAAA,IAAoH,CAAC,CAAD,kBAAA,CAAA,MAAA,EAA6B;AAAES,MAAAA,MAAM,EAAEH;AAAV,KAA7B,CAApH,IAAsK,CAAC,CAAD,aAAA,CAAA,MAAA,EAAwB;AAAEM,MAAAA,IAAI,EAAEN;AAAR,KAAxB,CAAtK,IAAiN,CAAC,CAAD,QAAA,CAAA,MAAA,EAAmB;AAAEiB,MAAAA,IAAI,EAAEjB;AAAR,KAAnB,CAAjN,IAAuP,CAAC,CAAD,sBAAA,CAAA,MAAA,EAAiC;AAAEiB,MAAAA,IAAI,EAAEjB;AAAR,KAAjC,CAA3P,EAA6S;AAC3SA,MAAAA,IAAI,GAAJA,MAAAA;AACAY,MAAAA,CAAC;AACDlB,MAAAA,MAAM,GAAGmB,UAAU,CAAnBnB,CAAmB,CAAnBA;AAHF,KAAA,MAIO;AACL,aAAA,KAAA;AACD;AACF;;AAED,SAAA,KAAA;AACD","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.AwaitExpression = exports.FunctionTypeAnnotation = undefined;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.ObjectExpression = ObjectExpression;\nexports.DoExpression = DoExpression;\nexports.Binary = Binary;\nexports.BinaryExpression = BinaryExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.YieldExpression = YieldExpression;\nexports.ClassExpression = ClassExpression;\nexports.UnaryLike = UnaryLike;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.AssignmentExpression = AssignmentExpression;\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar PRECEDENCE = {\n  \"||\": 0,\n  \"&&\": 1,\n  \"|\": 2,\n  \"^\": 3,\n  \"&\": 4,\n  \"==\": 5,\n  \"===\": 5,\n  \"!=\": 5,\n  \"!==\": 5,\n  \"<\": 6,\n  \">\": 6,\n  \"<=\": 6,\n  \">=\": 6,\n  in: 6,\n  instanceof: 6,\n  \">>\": 7,\n  \"<<\": 7,\n  \">>>\": 7,\n  \"+\": 8,\n  \"-\": 8,\n  \"*\": 9,\n  \"/\": 9,\n  \"%\": 9,\n  \"**\": 10\n};\n\nfunction NullableTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent);\n}\n\nexports.FunctionTypeAnnotation = NullableTypeAnnotation;\nfunction UpdateExpression(node, parent) {\n  return t.isMemberExpression(parent) && parent.object === node;\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerArrow: true });\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack);\n}\n\nfunction Binary(node, parent) {\n  if ((t.isCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node || t.isUnaryLike(parent) || t.isMemberExpression(parent) && parent.object === node || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    var parentOp = parent.operator;\n    var parentPos = PRECEDENCE[parentOp];\n\n    var nodeOp = node.operator;\n    var nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !t.isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === \"in\" && (t.isVariableDeclarator(parent) || t.isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n\n  if (t.isForStatement(parent) || t.isThrowStatement(parent) || t.isReturnStatement(parent) || t.isIfStatement(parent) && parent.test === node || t.isWhileStatement(parent) && parent.test === node || t.isForInStatement(parent) && parent.right === node || t.isSwitchStatement(parent) && parent.discriminant === node || t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return t.isBinary(parent) || t.isUnaryLike(parent) || t.isCallExpression(parent) || t.isMemberExpression(parent) || t.isNewExpression(parent) || t.isConditionalExpression(parent) && node === parent.test;\n}\n\nexports.AwaitExpression = YieldExpression;\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction UnaryLike(node, parent) {\n  return t.isMemberExpression(parent, { object: node }) || t.isCallExpression(parent, { callee: node }) || t.isNewExpression(parent, { callee: node });\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  if (t.isExportDeclaration(parent) || t.isBinaryExpression(parent) || t.isLogicalExpression(parent) || t.isUnaryExpression(parent) || t.isTaggedTemplateExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (t.isUnaryLike(parent) || t.isBinary(parent) || t.isConditionalExpression(parent, { test: node }) || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction AssignmentExpression(node) {\n  if (t.isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression.apply(undefined, arguments);\n  }\n}\n\nfunction isFirstInStatement(printStack) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$considerArrow = _ref.considerArrow,\n      considerArrow = _ref$considerArrow === undefined ? false : _ref$considerArrow,\n      _ref$considerDefaultE = _ref.considerDefaultExports,\n      considerDefaultExports = _ref$considerDefaultE === undefined ? false : _ref$considerDefaultE;\n\n  var i = printStack.length - 1;\n  var node = printStack[i];\n  i--;\n  var parent = printStack[i];\n  while (i > 0) {\n    if (t.isExpressionStatement(parent, { expression: node }) || t.isTaggedTemplateExpression(parent) || considerDefaultExports && t.isExportDefaultDeclaration(parent, { declaration: node }) || considerArrow && t.isArrowFunctionExpression(parent, { body: node })) {\n      return true;\n    }\n\n    if (t.isCallExpression(parent, { callee: node }) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isMemberExpression(parent, { object: node }) || t.isConditional(parent, { test: node }) || t.isBinary(parent, { left: node }) || t.isAssignmentExpression(parent, { left: node })) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}"],"file":"parentheses.js"}