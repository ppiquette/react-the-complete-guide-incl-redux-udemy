{"version":3,"sources":["../node_modules/babel-cli/lib/babel-node.js"],"names":["getV8Flags","require","path","args","babelArgs","process","userArgs","argSeparator","matches","arg","flag","v8Flags","getNormalizedV8Flag","kexec","err","child_process","proc","stdio"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar getV8Flags = require(\"v8flags\");\nvar path = require(\"path\");\n\nvar args = [path.join(__dirname, \"_babel-node\")];\n\nvar babelArgs = process.argv.slice(2);\nvar userArgs = void 0;\n\nvar argSeparator = babelArgs.indexOf(\"--\");\nif (argSeparator > -1) {\n  userArgs = babelArgs.slice(argSeparator);\n  babelArgs = babelArgs.slice(0, argSeparator);\n}\n\nfunction getNormalizedV8Flag(arg) {\n  var matches = arg.match(/--(.+)/);\n\n  if (matches) {\n    return \"--\" + matches[1].replace(/-/g, \"_\");\n  }\n\n  return arg;\n}\n\ngetV8Flags(function (err, v8Flags) {\n  babelArgs.forEach(function (arg) {\n    var flag = arg.split(\"=\")[0];\n\n    switch (flag) {\n      case \"-d\":\n        args.unshift(\"--debug\");\n        break;\n\n      case \"debug\":\n      case \"--debug\":\n      case \"--debug-brk\":\n      case \"--inspect\":\n      case \"--inspect-brk\":\n        args.unshift(arg);\n        break;\n\n      case \"-gc\":\n        args.unshift(\"--expose-gc\");\n        break;\n\n      case \"--nolazy\":\n        args.unshift(flag);\n        break;\n\n      default:\n        if (v8Flags.indexOf(getNormalizedV8Flag(flag)) >= 0 || arg.indexOf(\"--trace\") === 0) {\n          args.unshift(arg);\n        } else {\n          args.push(arg);\n        }\n        break;\n    }\n  });\n\n  if (argSeparator > -1) {\n    args = args.concat(userArgs);\n  }\n\n  try {\n    var kexec = require(\"kexec\");\n    kexec(process.argv[0], args);\n  } catch (err) {\n    if (err.code !== \"MODULE_NOT_FOUND\") throw err;\n\n    var child_process = require(\"child_process\");\n    var proc = child_process.spawn(process.argv[0], args, { stdio: \"inherit\" });\n    proc.on(\"exit\", function (code, signal) {\n      process.on(\"exit\", function () {\n        if (signal) {\n          process.kill(process.pid, signal);\n        } else {\n          process.exit(code);\n        }\n      });\n    });\n  }\n});"],"file":"babel-node.js"}