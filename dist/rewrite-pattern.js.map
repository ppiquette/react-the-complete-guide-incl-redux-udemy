{"version":3,"sources":["../node_modules/babel-plugin-transform-es2015-unicode-regex/node_modules/regexpu-core/rewrite-pattern.js"],"names":["generate","require","parse","regenerate","iuMappings","ESCAPE_SETS","object","hasOwnProperty","UNICODE_SET","BMP_SET","DOT_SET_UNICODE","DOT_SET","$this","folded","caseFold","target","source","tree","wrap","assign","has","ignoreCase","unicode","set","body","item","min","max","getCharacterClassEscapeSet","Error","characterClassItem","update","processCharacterClass","codePoint","module","flags","processTerm"],"mappings":"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","sourcesContent":["var generate = require('regjsgen').generate;\nvar parse = require('regjsparser').parse;\nvar regenerate = require('regenerate');\nvar iuMappings = require('./data/iu-mappings.json');\nvar ESCAPE_SETS = require('./data/character-class-escape-sets.js');\n\nfunction getCharacterClassEscapeSet(character) {\n\tif (unicode) {\n\t\tif (ignoreCase) {\n\t\t\treturn ESCAPE_SETS.UNICODE_IGNORE_CASE[character];\n\t\t}\n\t\treturn ESCAPE_SETS.UNICODE[character];\n\t}\n\treturn ESCAPE_SETS.REGULAR[character];\n}\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nfunction has(object, property) {\n\treturn hasOwnProperty.call(object, property);\n}\n\n// Prepare a Regenerate set containing all code points, used for negative\n// character classes (if any).\nvar UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF);\n// Without the `u` flag, the range stops at 0xFFFF.\n// https://mths.be/es6#sec-pattern-semantics\nvar BMP_SET = regenerate().addRange(0x0, 0xFFFF);\n\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./u`. https://mths.be/es6#sec-atom\nvar DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points\n\t.remove(\n\t\t// minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):\n\t\t0x000A, // Line Feed <LF>\n\t\t0x000D, // Carriage Return <CR>\n\t\t0x2028, // Line Separator <LS>\n\t\t0x2029  // Paragraph Separator <PS>\n\t);\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./` (only BMP code points).\nvar DOT_SET = DOT_SET_UNICODE.clone()\n\t.intersection(BMP_SET);\n\n// Add a range of code points + any case-folded code points in that range to a\n// set.\nregenerate.prototype.iuAddRange = function(min, max) {\n\tvar $this = this;\n\tdo {\n\t\tvar folded = caseFold(min);\n\t\tif (folded) {\n\t\t\t$this.add(folded);\n\t\t}\n\t} while (++min <= max);\n\treturn $this;\n};\n\nfunction assign(target, source) {\n\tfor (var key in source) {\n\t\t// Note: `hasOwnProperty` is not needed here.\n\t\ttarget[key] = source[key];\n\t}\n}\n\nfunction update(item, pattern) {\n\t// TODO: Test if memoizing `pattern` here is worth the effort.\n\tif (!pattern) {\n\t\treturn;\n\t}\n\tvar tree = parse(pattern, '');\n\tswitch (tree.type) {\n\t\tcase 'characterClass':\n\t\tcase 'group':\n\t\tcase 'value':\n\t\t\t// No wrapping needed.\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Wrap the pattern in a non-capturing group.\n\t\t\ttree = wrap(tree, pattern);\n\t}\n\tassign(item, tree);\n}\n\nfunction wrap(tree, pattern) {\n\t// Wrap the pattern in a non-capturing group.\n\treturn {\n\t\t'type': 'group',\n\t\t'behavior': 'ignore',\n\t\t'body': [tree],\n\t\t'raw': '(?:' + pattern + ')'\n\t};\n}\n\nfunction caseFold(codePoint) {\n\treturn has(iuMappings, codePoint) ? iuMappings[codePoint] : false;\n}\n\nvar ignoreCase = false;\nvar unicode = false;\nfunction processCharacterClass(characterClassItem) {\n\tvar set = regenerate();\n\tvar body = characterClassItem.body.forEach(function(item) {\n\t\tswitch (item.type) {\n\t\t\tcase 'value':\n\t\t\t\tset.add(item.codePoint);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tvar folded = caseFold(item.codePoint);\n\t\t\t\t\tif (folded) {\n\t\t\t\t\t\tset.add(folded);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassRange':\n\t\t\t\tvar min = item.min.codePoint;\n\t\t\t\tvar max = item.max.codePoint;\n\t\t\t\tset.addRange(min, max);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tset.iuAddRange(min, max);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassEscape':\n\t\t\t\tset.add(getCharacterClassEscapeSet(item.value));\n\t\t\t\tbreak;\n\t\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t\t// reached. Code coverage tools should ignore it.\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t\t}\n\t});\n\tif (characterClassItem.negative) {\n\t\tset = (unicode ? UNICODE_SET : BMP_SET).clone().remove(set);\n\t}\n\tupdate(characterClassItem, set.toString());\n\treturn characterClassItem;\n}\n\nfunction processTerm(item) {\n\tswitch (item.type) {\n\t\tcase 'dot':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\t(unicode ? DOT_SET_UNICODE : DOT_SET).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'characterClass':\n\t\t\titem = processCharacterClass(item);\n\t\t\tbreak;\n\t\tcase 'characterClassEscape':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\tgetCharacterClassEscapeSet(item.value).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'alternative':\n\t\tcase 'disjunction':\n\t\tcase 'group':\n\t\tcase 'quantifier':\n\t\t\titem.body = item.body.map(processTerm);\n\t\t\tbreak;\n\t\tcase 'value':\n\t\t\tvar codePoint = item.codePoint;\n\t\t\tvar set = regenerate(codePoint);\n\t\t\tif (ignoreCase && unicode) {\n\t\t\t\tvar folded = caseFold(codePoint);\n\t\t\t\tif (folded) {\n\t\t\t\t\tset.add(folded);\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdate(item, set.toString());\n\t\t\tbreak;\n\t\tcase 'anchor':\n\t\tcase 'empty':\n\t\tcase 'group':\n\t\tcase 'reference':\n\t\t\t// Nothing to do here.\n\t\t\tbreak;\n\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t// reached. Code coverage tools should ignore it.\n\t\t/* istanbul ignore next */\n\t\tdefault:\n\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t}\n\treturn item;\n};\n\nmodule.exports = function(pattern, flags) {\n\tvar tree = parse(pattern, flags);\n\tignoreCase = flags ? flags.indexOf('i') > -1 : false;\n\tunicode = flags ? flags.indexOf('u') > -1 : false;\n\tassign(tree, processTerm(tree));\n\treturn generate(tree);\n};\n"],"file":"rewrite-pattern.js"}